/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

[class*="col"] {
  float: left; }

/*=================================================
 Mobile-small  1px - 320px
 =================================================*/
@media (min-width: 1px) and (max-width: 320px) {
  .col-12-ms {
    width: 100%; }
  .col-11-ms {
    width: 91.66667%; }
  .col-10-ms {
    width: 83.33333%; }
  .col-9-ms {
    width: 75%; }
  .col-8-ms {
    width: 66.66667%; }
  .col-7-ms {
    width: 58.33333%; }
  .col-6-ms {
    width: 50%; }
  .col-5-ms {
    width: 41.66667%; }
  .col-4-ms {
    width: 33.33333%; }
  .col-3-ms {
    width: 25%; }
  .col-2-ms {
    width: 16.66667%; }
  .col-1-ms {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 1px 1px 0 1px; }
  .gtr-row:last-child {
    margin: 0 1px 1px 1px; }
  .gtr-row {
    margin: 0 1px; }
  .gtr {
    padding: 0;
    margin: 0; }
    .gtr > div {
      margin: 1px;
      min-height: 200px; } }

/*=================================================
 Mobile-large  321px - 767px
 =================================================*/
@media (min-width: 321px) and (max-width: 767px) {
  .col-12-ml {
    width: 100%; }
  .col-11-ml {
    width: 91.66667%; }
  .col-10-ml {
    width: 83.33333%; }
  .col-9-ml {
    width: 75%; }
  .col-8-ml {
    width: 66.66667%; }
  .col-7-ml {
    width: 58.33333%; }
  .col-6-ml {
    width: 50%; }
  .col-5-ml {
    width: 41.66667%; }
  .col-4-ml {
    width: 33.33333%; }
  .col-3-ml {
    width: 25%; }
  .col-2-ml {
    width: 16.66667%; }
  .col-1-ml {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 3px 3px 0 3px; }
  .gtr-row:last-child {
    margin: 0 3px 3px 3px; }
  .gtr-row {
    margin: 0 3px; }
  .gtr {
    margin: 0; }
    .gtr > div {
      margin: 3px;
      min-height: 300px; } }

/*=================================================
 TABLET  768px - 1024px
 =================================================*/
@media (min-width: 768px) and (max-width: 1024px) {
  .col-12-tab {
    width: 100%; }
  .col-11-tab {
    width: 91.66667%; }
  .col-10-tab {
    width: 83.33333%; }
  .col-9-tab {
    width: 75%; }
  .col-8-tab {
    width: 66.66667%; }
  .col-7-tab {
    width: 58.33333%; }
  .col-6-tab {
    width: 50%; }
  .col-5-tab {
    width: 41.66667%; }
  .col-4-tab {
    width: 33.33333%; }
  .col-3-tab {
    width: 25%; }
  .col-2-tab {
    width: 16.66667%; }
  .col-1-tab {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 4px 4px 0 4px; }
  .gtr-row:last-child {
    margin: 0 4px 4px 4px; }
  .gtr-row {
    margin: 0 4px; }
  .gtr {
    padding: 0;
    margin: 0; }
    .gtr > div {
      margin: 4px;
      min-height: 230px; } }

/*=================================================
 DESKTOP > 1024px
 =================================================*/
@media (min-width: 1025px) {
  .col-12-desk {
    width: 100%; }
  .col-11-desk {
    width: 91.66667%; }
  .col-10-desk {
    width: 83.33333%; }
  .col-9-desk {
    width: 75%; }
  .col-8-desk {
    width: 66.66667%; }
  .col-7-desk {
    width: 58.33333%; }
  .col-6-desk {
    width: 50%; }
  .col-5-desk {
    width: 41.66667%; }
  .col-4-desk {
    width: 33.33333%; }
  .col-3-desk {
    width: 25%; }
  .col-2-desk {
    width: 16.66667%; }
  .col-1-desk {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 6px 6px 0 6px; }
  .gtr-row:last-child {
    margin: 0 6px 6px 6px; }
  .gtr-row {
    margin: 0 6px; }
  .gtr {
    padding: 0;
    margin: 0; }
    .gtr > div {
      margin: 6px;
      min-height: 260px; } }

.row {
  width: 100%; }

.row:after {
  clear: both; }

.gtr-row:before,
.gtr-row:after {
  content: " ";
  /* 1 */
  display: block;
  /* 2 */ }

.gtr-row:after {
  clear: both; }

.gtr-row {
  *zoom: 1; }

.flex-center, .background-container, .card-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.clear {
  clear: both; }

.center {
  margin: 0 auto;
  text-align: center; }

.hgt-200 {
  height: 200px; }

.red-bg {
  background-color: #D24D57; }

.blue-bg {
  background-color: #4183D7; }

.green-bg {
  background-color: #16A085; }

.purple-bg {
  background-color: #663399; }

body {
  color: #424242;
  font-family: 'Playfair Display', serif; }
  body * {
    outline: none; }

h2 {
  padding: 30px 0; }

.row, .gtr-row {
  color: white;
  font-size: 13px; }

article {
  margin: 0 auto;
  max-width: 680px; }

.underline {
  text-decoration: underline; }

.background-container {
  width: 100%;
  background: url(../images/nature.jpg) center center no-repeat fixed;
  background-size: cover; }

.search-container {
  margin: 0 auto;
  background-color: rgba(255, 255, 255, 0.7); }
  .search-container input {
    display: block;
    height: 40px; }

@media (min-width: 1px) and (max-width: 767px) {
  .background-container {
    height: 400px; }
  .search-container {
    width: 90%;
    max-width: 560px; }
    .search-container input {
      width: 90%;
      margin: 0 auto; }
    .search-container h3 {
      text-align: center; } }

@media (min-width: 768px) {
  .background-container {
    height: 700px; }
  .search-container {
    width: 50%;
    max-width: 560px;
    padding: 10px 80px 30px 80px; }
    .search-container input {
      width: 100%; } }

.search-container {
  position: relative; }
  .search-container h1 {
    font-size: 40px;
    padding: 20px; }

.search-result-container {
  margin: 0 auto;
  z-index: 999;
  max-width: 100%;
  left: 0;
  right: 0;
  background-color: white;
  position: absolute; }
  .search-result-container .search-result {
    border-bottom: 1px solid #2f2f2f;
    padding: 30px 80px; }
    .search-result-container .search-result:hover {
      cursor: pointer; }

.search-result-active {
  background-color: #2f2f2f;
  color: #fcfcf4; }

h3 {
  padding: 0; }

.highlight {
  color: white;
  background-color: #D24D57; }

.search-result {
  text-transform: capitalize; }

.pop-up-container {
  position: fixed;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background-color: rgba(0, 0, 0, 0.6);
  display: none; }
  .pop-up-container .pop-up-container-inner {
    margin: 15% auto 0 auto;
    width: 50%;
    max-width: 350px;
    padding: 30px;
    background-color: #fcfcf4; }
  .pop-up-container .pop-up-address-container {
    text-transform: capitalize; }
  .pop-up-container .close-pop-up {
    background-color: #2f2f2f;
    color: #fcfcf4;
    cursor: pointer;
    width: 140px;
    padding: 20px;
    text-align: center;
    -webkit-transition: all 0.3s ease;
    transition: all 0.3s ease; }
    .pop-up-container .close-pop-up:hover {
      background-color: black; }
  .pop-up-container .highlight {
    color: inherit;
    background-color: inherit; }

.adress-container {
  background-color: white; }

.boy,
.girl {
  background-color: #fcfcf4;
  position: relative;
  color: #2f2f2f;
  box-shadow: -11px 13px 20px -14px rgba(0, 0, 0, 0.75); }

.adress-container .gtr-row {
  background-color: white; }

.face-container {
  background-size: cover;
  background-position: center center;
  position: absolute;
  top: 10px;
  right: 10px;
  width: 145px;
  height: 145px;
  border-radius: 50%;
  background-color: white; }

@media (min-width: 1px) and (max-width: 1024px) {
  .adress-text-container {
    font-size: 14px;
    width: auto;
    margin: 0 auto;
    padding: 160px 20px 30px; }
  .face-container {
    top: 10px;
    right: 0;
    left: 0;
    margin: 0 auto;
    border-radius: 50%; } }

@media (min-width: 1025px) {
  .adress-text-container {
    font-size: 16px;
    padding: 160px 20% 30px 0; }
  .face-container {
    top: 10px;
    right: 10px;
    border-radius: 50%; } }

.icon {
  line-height: 25px;
  font-size: 20px;
  margin: 30px 15px 0 0;
  color: #2f2f2f; }

.placeholder-icon {
  color: #fcfcf4; }

.all-info-link {
  padding: 50px 0 0;
  cursor: pointer; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9ub3JtYWxpemUuc2NzcyIsInN0eWxlc2hlZXQuY3NzIiwiX2dyaWQtZmxvYXQuc2NzcyIsIl9yZXNwb25zaXZlLnNjc3MiLCJfdmFyaWFibGVzLnNjc3MiLCJfaGVscGVycy5zY3NzIiwiX21haW4uc2NzcyIsIl9hZGRyZXNzLWNhcmQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0REFBNEQ7QUFFNUQ7Ozs7R0FJRztBQUVIO0VBQ0Usd0JBQXdCO0VBQUUsT0FBTztFQUNqQywyQkFBMkI7RUFBRSxPQUFPO0VBQ3BDLCtCQUErQjtFQUFFLE9BQU8sRUFDekM7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLFVBQVUsRUFDWDs7QUFFRDtnRkFDZ0Y7QUFFaEY7Ozs7O0dBS0c7QUFFSDs7Ozs7Ozs7Ozs7OztFQWFFLGVBQWUsRUFDaEI7O0FBRUQ7OztHQUdHO0FBRUg7Ozs7RUFJRSxzQkFBc0I7RUFBRSxPQUFPO0VBQy9CLHlCQUF5QjtFQUFFLE9BQU8sRUFDbkM7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxjQUFjO0VBQ2QsVUFBVSxFQUNYOztBQUVEOzs7R0FHRztBQ05IOztFRFVFLGNBQWMsRUFDZjs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLDhCQUE4QixFQUMvQjs7QUFFRDs7R0FFRztBQUVIOztFQUVFLFdBQVcsRUFDWjs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLDBCQUEwQixFQUMzQjs7QUFFRDs7R0FFRztBQUVIOztFQUVFLGtCQUFrQixFQUNuQjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsbUJBQW1CLEVBQ3BCOztBQUVEOzs7R0FHRztBQUVIO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQixFQUNsQjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVksRUFDYjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsZUFBZSxFQUNoQjs7QUFFRDs7R0FFRztBQUVIOztFQUVFLGVBQWU7RUFDZixlQUFlO0VB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QTFCLDBCQUEwQixFQUszQjtJQXZDSDtNQXFDTSx3QkFBd0IsRUFDekI7RUF0Q0w7SUEyQ0ksZUFBZTtJQUNmLDBCQUEwQixFQUMzQjs7QUN2TEg7RUFFRSx3QkFQZ0MsRUFTakM7O0FBWUQ7O0VBRUUsMEJIbkJnQjtFR29CaEIsbUJBQW1CO0VBQ25CLGVIdkJnQjtFR3dCaEIsc0RBQXNDLEVBQ3ZDOztBQUNEO0VBRUksd0JBOUI4QixFQStCL0I7O0FBR0g7RUFDRSx1QkFBdUI7RUFDdkIsbUNBQW1DO0VBQ25DLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsWUFBWTtFQUNaLGFBUGM7RUFRZCxjQVJjO0VBU2QsbUJBQW1CO0VBQ25CLHdCQUF3QixFQUN6Qjs7QUoxQkc7RUk2QkY7SUFDRSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGVBQWU7SUFDZix5QkFBeUIsRUFDMUI7RUFJRDtJQUNFLFVBQVU7SUFDVixTQUFTO0lBQ1QsUUFBUTtJQUNSLGVBQWU7SUFDZixtQkFBbUIsRUFDcEIsRUFBQTs7QUpqREM7RUlnRUY7SUFDRSxnQkFBZ0I7SUFDaEIsMEJBQTBCLEVBQzNCO0VBQ0Q7SUFDRSxVQUFVO0lBQ1YsWUFBWTtJQUNaLG1CQUFtQixFQUNwQixFQUFBOztBQUVIO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixzQkFBc0I7RUFFdEIsZUgxRmdCLEVHMkZqQjs7QUFDRDtFQUNFLGVIM0ZnQixFRzRGakI7O0FBQ0Q7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCLEVBQ2pCIiwiZmlsZSI6InN0eWxlc2hlZXQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4yIHwgTUlUIExpY2Vuc2UgfCBnaXQuaW8vbm9ybWFsaXplICovXG5cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXI6IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5cbmhyIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBLbm93biBsaW1pdGF0aW9uOiBieSBkZWZhdWx0LCBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYIGFsbG93IHZlcnkgbGltaXRlZFxuICogc3R5bGluZyBvZiBgc2VsZWN0YCwgdW5sZXNzIGEgYGJvcmRlcmAgcHJvcGVydHkgaXMgc2V0LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xuICBtYXJnaW46IDA7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAyICovXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn0iLCIvKiEgbm9ybWFsaXplLmNzcyB2My4wLjIgfCBNSVQgTGljZW5zZSB8IGdpdC5pby9ub3JtYWxpemUgKi9cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZTogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5pbWcge1xuICBib3JkZXI6IDA7IH1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogQWRkcmVzcyBkaWZmZXJlbmNlcyBiZXR3ZWVuIEZpcmVmb3ggYW5kIG90aGVyIGJyb3dzZXJzLlxuICovXG5ociB7XG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBDb250YWluIG92ZXJmbG93IGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiBBZGRyZXNzIG9kZCBgZW1gLXVuaXQgZm9udCBzaXplIHJlbmRlcmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDMgKi8gfVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8qIDMgKi8gfVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsOyB9XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMiAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgfVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuW2NsYXNzKj1cImNvbFwiXSB7XG4gIGZsb2F0OiBsZWZ0OyB9XG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIE1vYmlsZS1zbWFsbCAgMXB4IC0gMzIwcHhcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbkBtZWRpYSAobWluLXdpZHRoOiAxcHgpIGFuZCAobWF4LXdpZHRoOiAzMjBweCkge1xuICAuY29sLTEyLW1zIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuY29sLTExLW1zIHtcbiAgICB3aWR0aDogOTEuNjY2NjclOyB9XG4gIC5jb2wtMTAtbXMge1xuICAgIHdpZHRoOiA4My4zMzMzMyU7IH1cbiAgLmNvbC05LW1zIHtcbiAgICB3aWR0aDogNzUlOyB9XG4gIC5jb2wtOC1tcyB7XG4gICAgd2lkdGg6IDY2LjY2NjY3JTsgfVxuICAuY29sLTctbXMge1xuICAgIHdpZHRoOiA1OC4zMzMzMyU7IH1cbiAgLmNvbC02LW1zIHtcbiAgICB3aWR0aDogNTAlOyB9XG4gIC5jb2wtNS1tcyB7XG4gICAgd2lkdGg6IDQxLjY2NjY3JTsgfVxuICAuY29sLTQtbXMge1xuICAgIHdpZHRoOiAzMy4zMzMzMyU7IH1cbiAgLmNvbC0zLW1zIHtcbiAgICB3aWR0aDogMjUlOyB9XG4gIC5jb2wtMi1tcyB7XG4gICAgd2lkdGg6IDE2LjY2NjY3JTsgfVxuICAuY29sLTEtbXMge1xuICAgIHdpZHRoOiA4LjMzMzMzJTsgfVxuICAuZ3RyLXJvdzpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luOiAxcHggMXB4IDAgMXB4OyB9XG4gIC5ndHItcm93Omxhc3QtY2hpbGQge1xuICAgIG1hcmdpbjogMCAxcHggMXB4IDFweDsgfVxuICAuZ3RyLXJvdyB7XG4gICAgbWFyZ2luOiAwIDFweDsgfVxuICAuZ3RyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDsgfVxuICAgIC5ndHIgPiBkaXYge1xuICAgICAgbWFyZ2luOiAxcHg7XG4gICAgICBtaW4taGVpZ2h0OiAyMDBweDsgfSB9XG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIE1vYmlsZS1sYXJnZSAgMzIxcHggLSA3NjdweFxuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuQG1lZGlhIChtaW4td2lkdGg6IDMyMXB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmNvbC0xMi1tbCB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLmNvbC0xMS1tbCB7XG4gICAgd2lkdGg6IDkxLjY2NjY3JTsgfVxuICAuY29sLTEwLW1sIHtcbiAgICB3aWR0aDogODMuMzMzMzMlOyB9XG4gIC5jb2wtOS1tbCB7XG4gICAgd2lkdGg6IDc1JTsgfVxuICAuY29sLTgtbWwge1xuICAgIHdpZHRoOiA2Ni42NjY2NyU7IH1cbiAgLmNvbC03LW1sIHtcbiAgICB3aWR0aDogNTguMzMzMzMlOyB9XG4gIC5jb2wtNi1tbCB7XG4gICAgd2lkdGg6IDUwJTsgfVxuICAuY29sLTUtbWwge1xuICAgIHdpZHRoOiA0MS42NjY2NyU7IH1cbiAgLmNvbC00LW1sIHtcbiAgICB3aWR0aDogMzMuMzMzMzMlOyB9XG4gIC5jb2wtMy1tbCB7XG4gICAgd2lkdGg6IDI1JTsgfVxuICAuY29sLTItbWwge1xuICAgIHdpZHRoOiAxNi42NjY2NyU7IH1cbiAgLmNvbC0xLW1sIHtcbiAgICB3aWR0aDogOC4zMzMzMyU7IH1cbiAgLmd0ci1yb3c6Zmlyc3QtY2hpbGQge1xuICAgIG1hcmdpbjogM3B4IDNweCAwIDNweDsgfVxuICAuZ3RyLXJvdzpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW46IDAgM3B4IDNweCAzcHg7IH1cbiAgLmd0ci1yb3cge1xuICAgIG1hcmdpbjogMCAzcHg7IH1cbiAgLmd0ciB7XG4gICAgbWFyZ2luOiAwOyB9XG4gICAgLmd0ciA+IGRpdiB7XG4gICAgICBtYXJnaW46IDNweDtcbiAgICAgIG1pbi1oZWlnaHQ6IDMwMHB4OyB9IH1cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gVEFCTEVUICA3NjhweCAtIDEwMjRweFxuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jb2wtMTItdGFiIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuY29sLTExLXRhYiB7XG4gICAgd2lkdGg6IDkxLjY2NjY3JTsgfVxuICAuY29sLTEwLXRhYiB7XG4gICAgd2lkdGg6IDgzLjMzMzMzJTsgfVxuICAuY29sLTktdGFiIHtcbiAgICB3aWR0aDogNzUlOyB9XG4gIC5jb2wtOC10YWIge1xuICAgIHdpZHRoOiA2Ni42NjY2NyU7IH1cbiAgLmNvbC03LXRhYiB7XG4gICAgd2lkdGg6IDU4LjMzMzMzJTsgfVxuICAuY29sLTYtdGFiIHtcbiAgICB3aWR0aDogNTAlOyB9XG4gIC5jb2wtNS10YWIge1xuICAgIHdpZHRoOiA0MS42NjY2NyU7IH1cbiAgLmNvbC00LXRhYiB7XG4gICAgd2lkdGg6IDMzLjMzMzMzJTsgfVxuICAuY29sLTMtdGFiIHtcbiAgICB3aWR0aDogMjUlOyB9XG4gIC5jb2wtMi10YWIge1xuICAgIHdpZHRoOiAxNi42NjY2NyU7IH1cbiAgLmNvbC0xLXRhYiB7XG4gICAgd2lkdGg6IDguMzMzMzMlOyB9XG4gIC5ndHItcm93OmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW46IDRweCA0cHggMCA0cHg7IH1cbiAgLmd0ci1yb3c6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luOiAwIDRweCA0cHggNHB4OyB9XG4gIC5ndHItcm93IHtcbiAgICBtYXJnaW46IDAgNHB4OyB9XG4gIC5ndHIge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwOyB9XG4gICAgLmd0ciA+IGRpdiB7XG4gICAgICBtYXJnaW46IDRweDtcbiAgICAgIG1pbi1oZWlnaHQ6IDIzMHB4OyB9IH1cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gREVTS1RPUCA+IDEwMjRweFxuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuQG1lZGlhIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAuY29sLTEyLWRlc2sge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5jb2wtMTEtZGVzayB7XG4gICAgd2lkdGg6IDkxLjY2NjY3JTsgfVxuICAuY29sLTEwLWRlc2sge1xuICAgIHdpZHRoOiA4My4zMzMzMyU7IH1cbiAgLmNvbC05LWRlc2sge1xuICAgIHdpZHRoOiA3NSU7IH1cbiAgLmNvbC04LWRlc2sge1xuICAgIHdpZHRoOiA2Ni42NjY2NyU7IH1cbiAgLmNvbC03LWRlc2sge1xuICAgIHdpZHRoOiA1OC4zMzMzMyU7IH1cbiAgLmNvbC02LWRlc2sge1xuICAgIHdpZHRoOiA1MCU7IH1cbiAgLmNvbC01LWRlc2sge1xuICAgIHdpZHRoOiA0MS42NjY2NyU7IH1cbiAgLmNvbC00LWRlc2sge1xuICAgIHdpZHRoOiAzMy4zMzMzMyU7IH1cbiAgLmNvbC0zLWRlc2sge1xuICAgIHdpZHRoOiAyNSU7IH1cbiAgLmNvbC0yLWRlc2sge1xuICAgIHdpZHRoOiAxNi42NjY2NyU7IH1cbiAgLmNvbC0xLWRlc2sge1xuICAgIHdpZHRoOiA4LjMzMzMzJTsgfVxuICAuZ3RyLXJvdzpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luOiA2cHggNnB4IDAgNnB4OyB9XG4gIC5ndHItcm93Omxhc3QtY2hpbGQge1xuICAgIG1hcmdpbjogMCA2cHggNnB4IDZweDsgfVxuICAuZ3RyLXJvdyB7XG4gICAgbWFyZ2luOiAwIDZweDsgfVxuICAuZ3RyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDsgfVxuICAgIC5ndHIgPiBkaXYge1xuICAgICAgbWFyZ2luOiA2cHg7XG4gICAgICBtaW4taGVpZ2h0OiAyNjBweDsgfSB9XG5cbi5yb3cge1xuICB3aWR0aDogMTAwJTsgfVxuXG4ucm93OmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLmd0ci1yb3c6YmVmb3JlLFxuLmd0ci1yb3c6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jaztcbiAgLyogMiAqLyB9XG5cbi5ndHItcm93OmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLmd0ci1yb3cge1xuICAqem9vbTogMTsgfVxuXG4uZmxleC1jZW50ZXIsIC5iYWNrZ3JvdW5kLWNvbnRhaW5lciwgLmNhcmQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLmNsZWFyIHtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLmNlbnRlciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLmhndC0yMDAge1xuICBoZWlnaHQ6IDIwMHB4OyB9XG5cbi5yZWQtYmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDI0RDU3OyB9XG5cbi5ibHVlLWJnIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQxODNENzsgfVxuXG4uZ3JlZW4tYmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTZBMDg1OyB9XG5cbi5wdXJwbGUtYmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjYzMzk5OyB9XG5cbmJvZHkge1xuICBjb2xvcjogIzQyNDI0MjtcbiAgZm9udC1mYW1pbHk6ICdQbGF5ZmFpciBEaXNwbGF5Jywgc2VyaWY7IH1cbiAgYm9keSAqIHtcbiAgICBvdXRsaW5lOiBub25lOyB9XG5cbmgyIHtcbiAgcGFkZGluZzogMzBweCAwOyB9XG5cbi5yb3csIC5ndHItcm93IHtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDEzcHg7IH1cblxuYXJ0aWNsZSB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDY4MHB4OyB9XG5cbi51bmRlcmxpbmUge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4uYmFja2dyb3VuZC1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltYWdlcy9uYXR1cmUuanBnKSBjZW50ZXIgY2VudGVyIG5vLXJlcGVhdCBmaXhlZDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuXG4uc2VhcmNoLWNvbnRhaW5lciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7IH1cbiAgLnNlYXJjaC1jb250YWluZXIgaW5wdXQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogNDBweDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMXB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmJhY2tncm91bmQtY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDQwMHB4OyB9XG4gIC5zZWFyY2gtY29udGFpbmVyIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1heC13aWR0aDogNTYwcHg7IH1cbiAgICAuc2VhcmNoLWNvbnRhaW5lciBpbnB1dCB7XG4gICAgICB3aWR0aDogOTAlO1xuICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgICAuc2VhcmNoLWNvbnRhaW5lciBoMyB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmJhY2tncm91bmQtY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDcwMHB4OyB9XG4gIC5zZWFyY2gtY29udGFpbmVyIHtcbiAgICB3aWR0aDogNTAlO1xuICAgIG1heC13aWR0aDogNTYwcHg7XG4gICAgcGFkZGluZzogMTBweCA4MHB4IDMwcHggODBweDsgfVxuICAgIC5zZWFyY2gtY29udGFpbmVyIGlucHV0IHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLnNlYXJjaC1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnNlYXJjaC1jb250YWluZXIgaDEge1xuICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICBwYWRkaW5nOiAyMHB4OyB9XG5cbi5zZWFyY2gtcmVzdWx0LWNvbnRhaW5lciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB6LWluZGV4OiA5OTk7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7IH1cbiAgLnNlYXJjaC1yZXN1bHQtY29udGFpbmVyIC5zZWFyY2gtcmVzdWx0IHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzJmMmYyZjtcbiAgICBwYWRkaW5nOiAzMHB4IDgwcHg7IH1cbiAgICAuc2VhcmNoLXJlc3VsdC1jb250YWluZXIgLnNlYXJjaC1yZXN1bHQ6aG92ZXIge1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi5zZWFyY2gtcmVzdWx0LWFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZjJmMmY7XG4gIGNvbG9yOiAjZmNmY2Y0OyB9XG5cbmgzIHtcbiAgcGFkZGluZzogMDsgfVxuXG4uaGlnaGxpZ2h0IHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDI0RDU3OyB9XG5cbi5zZWFyY2gtcmVzdWx0IHtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7IH1cblxuLnBvcC11cC1jb250YWluZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgZGlzcGxheTogbm9uZTsgfVxuICAucG9wLXVwLWNvbnRhaW5lciAucG9wLXVwLWNvbnRhaW5lci1pbm5lciB7XG4gICAgbWFyZ2luOiAxNSUgYXV0byAwIGF1dG87XG4gICAgd2lkdGg6IDUwJTtcbiAgICBtYXgtd2lkdGg6IDM1MHB4O1xuICAgIHBhZGRpbmc6IDMwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmNDsgfVxuICAucG9wLXVwLWNvbnRhaW5lciAucG9wLXVwLWFkZHJlc3MtY29udGFpbmVyIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsgfVxuICAucG9wLXVwLWNvbnRhaW5lciAuY2xvc2UtcG9wLXVwIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYyZjJmO1xuICAgIGNvbG9yOiAjZmNmY2Y0O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB3aWR0aDogMTQwcHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsgfVxuICAgIC5wb3AtdXAtY29udGFpbmVyIC5jbG9zZS1wb3AtdXA6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IH1cbiAgLnBvcC11cC1jb250YWluZXIgLmhpZ2hsaWdodCB7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDsgfVxuXG4uYWRyZXNzLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB9XG5cbi5ib3ksXG4uZ2lybCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmY2ZjZjQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICMyZjJmMmY7XG4gIGJveC1zaGFkb3c6IC0xMXB4IDEzcHggMjBweCAtMTRweCByZ2JhKDAsIDAsIDAsIDAuNzUpOyB9XG5cbi5hZHJlc3MtY29udGFpbmVyIC5ndHItcm93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cblxuLmZhY2UtY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwcHg7XG4gIHJpZ2h0OiAxMHB4O1xuICB3aWR0aDogMTQ1cHg7XG4gIGhlaWdodDogMTQ1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDFweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuYWRyZXNzLXRleHQtY29udGFpbmVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMTYwcHggMjBweCAzMHB4OyB9XG4gIC5mYWNlLWNvbnRhaW5lciB7XG4gICAgdG9wOiAxMHB4O1xuICAgIHJpZ2h0OiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgYm9yZGVyLXJhZGl1czogNTAlOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAuYWRyZXNzLXRleHQtY29udGFpbmVyIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgcGFkZGluZzogMTYwcHggMjAlIDMwcHggMDsgfVxuICAuZmFjZS1jb250YWluZXIge1xuICAgIHRvcDogMTBweDtcbiAgICByaWdodDogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7IH0gfVxuXG4uaWNvbiB7XG4gIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICBmb250LXNpemU6IDIwcHg7XG4gIG1hcmdpbjogMzBweCAxNXB4IDAgMDtcbiAgY29sb3I6ICMyZjJmMmY7IH1cblxuLnBsYWNlaG9sZGVyLWljb24ge1xuICBjb2xvcjogI2ZjZmNmNDsgfVxuXG4uYWxsLWluZm8tbGluayB7XG4gIHBhZGRpbmc6IDUwcHggMCAwO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiIsIltjbGFzcyo9XCJjb2xcIl0ge1xuICBmbG9hdDogbGVmdDtcbn1cblxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gTW9iaWxlLXNtYWxsICAxcHggLSAzMjBweFxuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuQGluY2x1ZGUgcmVzcG9uZC10byhtb2JpbGUtc21hbGwpIHtcblxuICAuY29sLTEyLW1zXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxMi8xMik7XG4gIH1cbiAgLmNvbC0xMS1tc1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMTEvMTIpO1xuICB9XG4gIC5jb2wtMTAtbXNcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEwLzEyKTtcbiAgfVxuICAuY29sLTktbXNcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDkvMTIpO1xuICB9XG4gIC5jb2wtOC1tc1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoOC8xMik7XG4gIH1cbiAgLmNvbC03LW1zXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg3LzEyKTtcbiAgfVxuICAuY29sLTYtbXNcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDYvMTIpO1xuICB9XG4gIC5jb2wtNS1tc1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNS8xMik7XG4gIH1cbiAgLmNvbC00LW1zXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg0LzEyKTtcbiAgfVxuICAuY29sLTMtbXNcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDMvMTIpO1xuICB9XG4gIC5jb2wtMi1tc1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMi8xMik7XG4gIH1cbiAgLmNvbC0xLW1zXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxLzEyKTtcbiAgfVxuXG4gIC5ndHItcm93OmZpcnN0LWNoaWxkXG4gIHtcbiAgICBtYXJnaW46ICRtcy1ndHIgJG1zLWd0ciAwICRtcy1ndHI7XG4gIH1cbiAgLmd0ci1yb3c6bGFzdC1jaGlsZFxuICB7XG4gICAgbWFyZ2luOiAwICRtcy1ndHIgJG1zLWd0ciAgJG1zLWd0cjtcbiAgfVxuICAuZ3RyLXJvd1xuICB7XG4gICAgbWFyZ2luOiAwICRtcy1ndHI7XG4gIH1cbiAgLmd0cntcbiAgICBwYWRkaW5nOjA7XG4gICAgbWFyZ2luOjA7XG5cbiAgICA+IGRpdntcbiAgICAgIG1hcmdpbjokbXMtZ3RyO1xuICAgICAgbWluLWhlaWdodDogJG1zLWd0ci1taW4taDtcbiAgICB9XG4gIH1cbn1cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIE1vYmlsZS1sYXJnZSAgMzIxcHggLSA3NjdweFxuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG5AaW5jbHVkZSByZXNwb25kLXRvKG1vYmlsZS1sYXJnZSkge1xuICAuY29sLTEyLW1sXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxMi8xMik7XG4gIH1cbiAgLmNvbC0xMS1tbFxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMTEvMTIpO1xuICB9XG4gIC5jb2wtMTAtbWxcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEwLzEyKTtcbiAgfVxuICAuY29sLTktbWxcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDkvMTIpO1xuICB9XG4gIC5jb2wtOC1tbFxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoOC8xMik7XG4gIH1cbiAgLmNvbC03LW1sXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg3LzEyKTtcbiAgfVxuICAuY29sLTYtbWxcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDYvMTIpO1xuICB9XG4gIC5jb2wtNS1tbFxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNS8xMik7XG4gIH1cbiAgLmNvbC00LW1sXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg0LzEyKTtcbiAgfVxuICAuY29sLTMtbWxcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDMvMTIpO1xuICB9XG4gIC5jb2wtMi1tbFxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMi8xMik7XG4gIH1cbiAgLmNvbC0xLW1sXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxLzEyKTtcbiAgfVxuXG4gIC5ndHItcm93OmZpcnN0LWNoaWxkXG4gIHtcbiAgICBtYXJnaW46ICRtbC1ndHIgJG1sLWd0ciAwICRtbC1ndHI7XG4gIH1cbiAgLmd0ci1yb3c6bGFzdC1jaGlsZFxuICB7XG4gICAgbWFyZ2luOiAwICRtbC1ndHIgJG1sLWd0ciAgJG1sLWd0cjtcbiAgfVxuICAuZ3RyLXJvd1xuICB7XG4gICAgbWFyZ2luOiAwICRtbC1ndHI7XG4gIH1cbiAgLmd0cntcblxuICAgIG1hcmdpbjowO1xuICAgID4gZGl2e1xuICAgICAgbWFyZ2luOiRtbC1ndHI7XG4gICAgICBtaW4taGVpZ2h0OiAkbWwtZ3RyLW1pbi1oO1xuICAgIH1cbiAgfVxufVxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gVEFCTEVUICA3NjhweCAtIDEwMjRweFxuID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuXG5AaW5jbHVkZSByZXNwb25kLXRvKHRhYmxldCkge1xuICAuY29sLTEyLXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMTIvMTIpO1xuICB9XG4gIC5jb2wtMTEtdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxMS8xMik7XG4gIH1cbiAgLmNvbC0xMC10YWJcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEwLzEyKTtcbiAgfVxuICAuY29sLTktdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg5LzEyKTtcbiAgfVxuICAuY29sLTgtdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg4LzEyKTtcbiAgfVxuICAuY29sLTctdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg3LzEyKTtcbiAgfVxuICAuY29sLTYtdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg2LzEyKTtcbiAgfVxuICAuY29sLTUtdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg1LzEyKTtcbiAgfVxuICAuY29sLTQtdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg0LzEyKTtcbiAgfVxuICAuY29sLTMtdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgzLzEyKTtcbiAgfVxuICAuY29sLTItdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgyLzEyKTtcbiAgfVxuICAuY29sLTEtdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxLzEyKTtcbiAgfVxuXG4gIC5ndHItcm93OmZpcnN0LWNoaWxkXG4gIHtcbiAgICBtYXJnaW46ICR0YWItZ3RyICR0YWItZ3RyIDAgJHRhYi1ndHI7XG4gIH1cbiAgLmd0ci1yb3c6bGFzdC1jaGlsZFxuICB7XG4gICAgbWFyZ2luOiAwICR0YWItZ3RyICR0YWItZ3RyICAkdGFiLWd0cjtcbiAgfVxuICAuZ3RyLXJvd1xuICB7XG4gICAgbWFyZ2luOiAwICR0YWItZ3RyO1xuICB9XG5cbiAgLmd0cntcbiAgICAvLyB3aWR0aDoyNSU7XG4gICAgLy8gZmxvYXQ6bGVmdDtcbiAgICBwYWRkaW5nOjA7XG4gICAgbWFyZ2luOjA7XG4gICAgPiBkaXZ7XG4gICAgICBtYXJnaW46JHRhYi1ndHI7XG4gICAgICBtaW4taGVpZ2h0OiAkdGFiLWd0ci1taW4taDtcbiAgICB9XG4gIH1cbn1cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIERFU0tUT1AgPiAxMDI0cHhcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbkBpbmNsdWRlIHJlc3BvbmQtdG8oZGVza3RvcCkge1xuICAuY29sLTEyLWRlc2tcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEyLzEyKTtcbiAgfVxuICAuY29sLTExLWRlc2tcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDExLzEyKTtcbiAgfVxuICAuY29sLTEwLWRlc2tcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEwLzEyKTtcbiAgfVxuICAuY29sLTktZGVza1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoOS8xMik7XG4gIH1cbiAgLmNvbC04LWRlc2tcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDgvMTIpO1xuICB9XG4gIC5jb2wtNy1kZXNrXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg3LzEyKTtcbiAgfVxuICAuY29sLTYtZGVza1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNi8xMik7XG4gIH1cbiAgLmNvbC01LWRlc2tcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDUvMTIpO1xuICB9XG4gIC5jb2wtNC1kZXNrXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg0LzEyKTtcbiAgfVxuICAuY29sLTMtZGVza1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMy8xMik7XG4gIH1cbiAgLmNvbC0yLWRlc2tcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDIvMTIpO1xuICB9XG4gIC5jb2wtMS1kZXNrXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxLzEyKTtcbiAgfVxuICAuZ3RyLXJvdzpmaXJzdC1jaGlsZFxuICB7XG4gICAgbWFyZ2luOiAkZGVzay1ndHIgJGRlc2stZ3RyIDAgJGRlc2stZ3RyO1xuICB9XG4gIC5ndHItcm93Omxhc3QtY2hpbGRcbiAge1xuICAgIG1hcmdpbjogMCAkZGVzay1ndHIgJGRlc2stZ3RyICAkZGVzay1ndHI7XG4gIH1cbiAgLmd0ci1yb3dcbiAge1xuICAgIG1hcmdpbjogMCAkZGVzay1ndHI7XG4gIH1cbiAgLmd0cntcbiAgICBwYWRkaW5nOjA7XG4gICAgbWFyZ2luOjA7XG4gICAgPiBkaXZ7XG4gICAgICBtYXJnaW46JGRlc2stZ3RyO1xuICAgICAgbWluLWhlaWdodDogJGRlc2stZ3RyLW1pbi1oO1xuICAgIH1cbiAgfVxufVxuLnJvd1xue1xuICB3aWR0aDogMTAwJTtcbn1cbi5yb3c6YWZ0ZXJcbntcbiAgY2xlYXI6IGJvdGg7XG59XG4uZ3RyLXJvdzpiZWZvcmUsXG4uZ3RyLXJvdzphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiOyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyAvKiAyICovXG59XG4uZ3RyLXJvdzphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuLmd0ci1yb3cge1xuICAqem9vbTogMTtcbn1cbi5ndHJ7XG4vLyAgYmFja2dyb3VuZDokb2ZmV2hpdGU7XG4gID4gZGl2e1xuICAgIC8vYmFja2dyb3VuZDokcmVkO1xuICB9XG59XG4iLCJAbWl4aW4gcmVzcG9uZC10bygkYnJlYWtwb2ludCkge1xuICBAaWYgJGJyZWFrcG9pbnQgPT0gXCJtb2JpbGUtc21hbGxcIiB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDFweCkgYW5kIChtYXgtd2lkdGg6ICRtb2JpbGUtc21hbGwtYnJlYWspIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkYnJlYWtwb2ludCA9PSBcIm1vYmlsZS1sYXJnZVwiIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1vYmlsZS1zbWFsbC1icmVhaysxKSBhbmQgKG1heC13aWR0aDogJG1vYmlsZS1sYXJnZS1icmVhaykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRicmVha3BvaW50ID09IFwidGFibGV0XCIge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbW9iaWxlLWxhcmdlLWJyZWFrKzEpIGFuZCAobWF4LXdpZHRoOiAkdGFibGV0LWJyZWFrKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbiAgQGVsc2UgaWYgJGJyZWFrcG9pbnQgPT0gXCJkZXNrdG9wXCIge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0LWJyZWFrKzEpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuICBAZWxzZSBpZiAkYnJlYWtwb2ludCA9PSBcIm5vdC1kZXNrdG9wXCIge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxcHgpIGFuZCAobWF4LXdpZHRoOiAkdGFibGV0LWJyZWFrKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxufVxuIiwiJHJlZDogI0QyNEQ1NztcbiRibHVlOiAjNDE4M0Q3O1xuJGdyZWVuOiAjMTZBMDg1O1xuJHB1cnBsZTogIzY2MzM5OTtcbiRkYXJrR3JleTogIzJmMmYyZjtcbi8vJG9mZldoaXRlOiAjZjNmNGU5O1xuJG9mZldoaXRlOiAjZmNmY2Y0O1xuXG4kbW9iaWxlLXNtYWxsLWJyZWFrOiAzMjBweDtcbiRtb2JpbGUtbGFyZ2UtYnJlYWs6IDc2N3B4O1xuJHRhYmxldC1icmVhazogMTAyNHB4O1xuXG4kbXMtZ3RyLW1pbi1oOiAyMDBweDtcbiRtcy1ndHI6IDFweDtcblxuJG1sLWd0ci1taW4taDogMzAwcHg7XG4kbWwtZ3RyOiAzcHg7XG5cbiR0YWItZ3RyLW1pbi1oOiAyMzBweDtcbiR0YWItZ3RyOiA0cHg7XG5cbiRkZXNrLWd0ci1taW4taDogMjYwcHg7XG4kZGVzay1ndHI6IDZweDtcbiIsIi8vIEp1c3RpZnkgY29udGVudCB2ZXJ0aWNhbGx5IGFuZCBob3Jpem9udGFsbHlcbi5mbGV4LWNlbnRlclxue1xuICBkaXNwbGF5OmZsZXg7XG4gIGp1c3RpZnktY29udGVudDpjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOmNlbnRlcjtcbn1cblxuLy8gQ2xlYXIgZmxvYXRzXG4uY2xlYXJcbntcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi8vIENlbnRlciBjb250ZW50XG4uY2VudGVyXG57XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5oZ3QtMjAwXG57XG4gIGhlaWdodDogMjAwcHg7XG59XG4ucmVkLWJnXG57XG5iYWNrZ3JvdW5kLWNvbG9yOiAkcmVkO1xufVxuLmJsdWUtYmdcbntcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XG59XG4uZ3JlZW4tYmdcbntcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuO1xufVxuLnB1cnBsZS1iZ1xue1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHVycGxlO1xufSIsImJvZHlcbntcbiAgY29sb3I6ICM0MjQyNDI7XG4gIGZvbnQtZmFtaWx5OiAnUGxheWZhaXIgRGlzcGxheScsIHNlcmlmO1xuICAqIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG59XG5oMlxue1xuICBwYWRkaW5nOiAzMHB4IDA7XG59XG4ucm93LCAuZ3RyLXJvd1xue1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogMTNweDtcbn1cbmFydGljbGVcbntcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogNjgwcHg7XG59XG5cbi51bmRlcmxpbmVcbntcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5iYWNrZ3JvdW5kLWNvbnRhaW5lclxue1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltYWdlcy9uYXR1cmUuanBnKSBjZW50ZXIgY2VudGVyIG5vLXJlcGVhdCBmaXhlZDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgQGV4dGVuZCAuZmxleC1jZW50ZXJcbn1cblxuLnNlYXJjaC1jb250YWluZXJcbntcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC43KTtcbiAgaW5wdXRcbiAge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxufVxuXG5AbWVkaWEobWluLXdpZHRoOiAxcHgpIGFuZCAobWF4LXdpZHRoOiAkbW9iaWxlLWxhcmdlLWJyZWFrKVxue1xuICAuYmFja2dyb3VuZC1jb250YWluZXJcbiAge1xuICAgIGhlaWdodDogNDAwcHg7XG4gIH1cblxuXG4gIC5zZWFyY2gtY29udGFpbmVyXG4gIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1heC13aWR0aDogNTYwcHg7XG4gICAgaW5wdXRcbiAgICB7XG4gICAgICB3aWR0aDogOTAlO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuICAgIGgzXG4gICAge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6ICRtb2JpbGUtbGFyZ2UtYnJlYWsrMSlcbntcbiAgLmJhY2tncm91bmQtY29udGFpbmVyXG4gIHtcbiAgICBoZWlnaHQ6IDcwMHB4O1xuICB9XG5cbiAgLnNlYXJjaC1jb250YWluZXJcbiAge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWF4LXdpZHRoOiA1NjBweDtcbiAgICBwYWRkaW5nOiAxMHB4IDgwcHggMzBweCA4MHB4O1xuXG4gICAgaW5wdXRcbiAgICB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cbn1cblxuXG5cblxuLnNlYXJjaC1jb250YWluZXJcbntcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoMVxuICB7XG4gICAgZm9udC1zaXplOiA0MHB4O1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gIH1cbn1cbi5zZWFyY2gtcmVzdWx0LWNvbnRhaW5lclxue1xuICBtYXJnaW46IDAgYXV0bztcbiAgei1pbmRleDogOTk5O1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuIC5zZWFyY2gtcmVzdWx0XG4gIHtcbiAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZGFya0dyZXk7XG4gICBwYWRkaW5nOiAzMHB4IDgwcHg7XG5cbiAgICY6aG92ZXJcbiAgIHtcbiAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgfVxuICB9XG59XG4uc2VhcmNoLXJlc3VsdC1hY3RpdmVcbntcbiAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtHcmV5O1xuICBjb2xvcjogJG9mZldoaXRlO1xufVxuaDNcbntcbiAgcGFkZGluZzogMDtcbn1cblxuXG4uaGlnaGxpZ2h0XG57XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHJlZDtcbn1cblxuXG4uc2VhcmNoLXJlc3VsdFxue1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxuLnBvcC11cC1jb250YWluZXJcbntcblxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC42KTtcbiAgZGlzcGxheTogbm9uZTtcbiAgLnBvcC11cC1jb250YWluZXItaW5uZXJcbiAge1xuICAgIG1hcmdpbjogMTUlIGF1dG8gMCBhdXRvOyAvL1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWF4LXdpZHRoOiAzNTBweDtcbiAgICBwYWRkaW5nOiAzMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRvZmZXaGl0ZTtcblxuICB9XG5cbiAgLnBvcC11cC1hZGRyZXNzLWNvbnRhaW5lclxuICB7XG5cbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcblxuICB9XG5cbiAgLmNsb3NlLXBvcC11cFxuICB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtHcmV5O1xuICAgIGNvbG9yOiAkb2ZmV2hpdGU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHdpZHRoOiAxNDBweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgICY6aG92ZXJcbiAgICB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICB9XG4gIH1cblxuICAuaGlnaGxpZ2h0XG4gIHtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xuICB9XG5cbn1cbiIsIlxuJGNhcmRCYWNrZ3JvdW5kOiAkb2ZmV2hpdGU7XG4kYWRkcmVzc0NvbnRhaW5lckJhY2tncm91bmQ6IHdoaXRlO1xuJGFkZHJlc3NUZXh0Q29sb3I6ICRkYXJrR3JleTtcblxuXG5cbi5hZHJlc3MtY29udGFpbmVyXG57XG4gIGJhY2tncm91bmQtY29sb3I6ICRhZGRyZXNzQ29udGFpbmVyQmFja2dyb3VuZDtcbiAgLy9jb2xvcjogJGFkZHJlc3NUZXh0Q29sb3I7XG59XG5cbi5naXJsIHtcbiAgLmZhY2UtY29udGFpbmVyIHtcbiAgICAvLyAgYm9yZGVyOiAycHggc29saWQgJHJlZDtcbiAgfVxufVxuLmJveSB7XG4gIC5mYWNlLWNvbnRhaW5lciB7XG4gICAgLy8gIGJvcmRlcjogMnB4IHNvbGlkICRncmVlbjtcbiAgfVxufVxuLmJveSxcbi5naXJsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNhcmRCYWNrZ3JvdW5kO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAkYWRkcmVzc1RleHRDb2xvcjtcbiAgYm94LXNoYWRvdzogLTExcHggMTNweCAyMHB4IC0xNHB4IHJnYmEoMCwwLDAsMC43NSk7XG59XG4uYWRyZXNzLWNvbnRhaW5lciB7XG4gIC5ndHItcm93IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWRkcmVzc0NvbnRhaW5lckJhY2tncm91bmQ7IC8vJG9mZldoaXRlO1xuICB9XG59XG4kZmFjZVNpemU6IDE0NXB4O1xuLmZhY2UtY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwcHg7XG4gIHJpZ2h0OiAxMHB4O1xuICB3aWR0aDogJGZhY2VTaXplO1xuICBoZWlnaHQ6ICRmYWNlU2l6ZTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuQGluY2x1ZGUgcmVzcG9uZC10byhub3QtZGVza3RvcCkge1xuICAuYWRyZXNzLXRleHQtY29udGFpbmVyIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMTYwcHggMjBweCAzMHB4O1xuICB9XG4gIC5jYXJkLWNvbnRhaW5lciB7XG4gICAgQGV4dGVuZCAuZmxleC1jZW50ZXI7XG4gIH1cbiAgLmZhY2UtY29udGFpbmVyIHtcbiAgICB0b3A6IDEwcHg7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIH1cbn1cbkBpbmNsdWRlIHJlc3BvbmQtdG8oZGVza3RvcCkge1xuXG4gIC8vIC5jYXJkLWNvbnRhaW5lcjpiZWZvcmVcbiAgLy8ge1xuICAvLyAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9jbGlwLnBuZ1wiKTtcbiAgLy8gICB3aWR0aDogNTBweDtcbiAgLy8gICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAvLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAvLyAgICBsZWZ0OiAxNjBweDtcbiAgLy8gICAgdG9wOiAtNjZweDtcbiAgLy8gICAgaGVpZ2h0OjU3cHg7XG4gIC8vIH1cblxuICAuYWRyZXNzLXRleHQtY29udGFpbmVyIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgcGFkZGluZzogMTYwcHggMjAlIDMwcHggMDtcbiAgfVxuICAuZmFjZS1jb250YWluZXIge1xuICAgIHRvcDogMTBweDtcbiAgICByaWdodDogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIH1cbn1cbi5pY29uIHtcbiAgbGluZS1oZWlnaHQ6IDI1cHg7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbWFyZ2luOiAzMHB4IDE1cHggMCAwO1xuLy8gIGNvbG9yOiBkYXJrZW4oZ3JleSwxMCUpO1xuICBjb2xvcjogJGFkZHJlc3NUZXh0Q29sb3I7XG59XG4ucGxhY2Vob2xkZXItaWNvbiB7XG4gIGNvbG9yOiAkY2FyZEJhY2tncm91bmQ7XG59XG4uYWxsLWluZm8tbGluayB7XG4gIHBhZGRpbmc6IDUwcHggMCAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
