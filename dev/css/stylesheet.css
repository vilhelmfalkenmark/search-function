/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

[class*="col"] {
  float: left; }

/*=================================================
 Mobile-small  1px - 320px
 =================================================*/
@media (min-width: 1px) and (max-width: 450px) {
  .col-12-ms {
    width: 100%; }
  .col-11-ms {
    width: 91.66667%; }
  .col-10-ms {
    width: 83.33333%; }
  .col-9-ms {
    width: 75%; }
  .col-8-ms {
    width: 66.66667%; }
  .col-7-ms {
    width: 58.33333%; }
  .col-6-ms {
    width: 50%; }
  .col-5-ms {
    width: 41.66667%; }
  .col-4-ms {
    width: 33.33333%; }
  .col-3-ms {
    width: 25%; }
  .col-2-ms {
    width: 16.66667%; }
  .col-1-ms {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 3px 3px 0 3px; }
  .gtr-row:last-child {
    margin: 0 3px 3px 3px; }
  .gtr-row {
    margin: 0 3px; }
  .gtr {
    padding: 0;
    margin: 0; }
    .gtr > div {
      margin: 3px;
      min-height: 200px; } }

/*=================================================
 Mobile-large  321px - 767px
 =================================================*/
@media (min-width: 451px) and (max-width: 767px) {
  .col-12-ml {
    width: 100%; }
  .col-11-ml {
    width: 91.66667%; }
  .col-10-ml {
    width: 83.33333%; }
  .col-9-ml {
    width: 75%; }
  .col-8-ml {
    width: 66.66667%; }
  .col-7-ml {
    width: 58.33333%; }
  .col-6-ml {
    width: 50%; }
  .col-5-ml {
    width: 41.66667%; }
  .col-4-ml {
    width: 33.33333%; }
  .col-3-ml {
    width: 25%; }
  .col-2-ml {
    width: 16.66667%; }
  .col-1-ml {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 6px 6px 0 6px; }
  .gtr-row:last-child {
    margin: 0 6px 6px 6px; }
  .gtr-row {
    margin: 0 6px; }
  .gtr {
    margin: 0; }
    .gtr > div {
      margin: 6px;
      min-height: 300px; } }

/*=================================================
 TABLET  768px - 1024px
 =================================================*/
@media (min-width: 768px) and (max-width: 1024px) {
  .col-12-tab {
    width: 100%; }
  .col-11-tab {
    width: 91.66667%; }
  .col-10-tab {
    width: 83.33333%; }
  .col-9-tab {
    width: 75%; }
  .col-8-tab {
    width: 66.66667%; }
  .col-7-tab {
    width: 58.33333%; }
  .col-6-tab {
    width: 50%; }
  .col-5-tab {
    width: 41.66667%; }
  .col-4-tab {
    width: 33.33333%; }
  .col-3-tab {
    width: 25%; }
  .col-2-tab {
    width: 16.66667%; }
  .col-1-tab {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 4px 4px 0 4px; }
  .gtr-row:last-child {
    margin: 0 4px 4px 4px; }
  .gtr-row {
    margin: 0 4px; }
  .gtr {
    padding: 0;
    margin: 0; }
    .gtr > div {
      margin: 4px;
      min-height: 230px; } }

/*=================================================
 DESKTOP > 1024px
 =================================================*/
@media (min-width: 1025px) {
  .col-12-desk {
    width: 100%; }
  .col-11-desk {
    width: 91.66667%; }
  .col-10-desk {
    width: 83.33333%; }
  .col-9-desk {
    width: 75%; }
  .col-8-desk {
    width: 66.66667%; }
  .col-7-desk {
    width: 58.33333%; }
  .col-6-desk {
    width: 50%; }
  .col-5-desk {
    width: 41.66667%; }
  .col-4-desk {
    width: 33.33333%; }
  .col-3-desk {
    width: 25%; }
  .col-2-desk {
    width: 16.66667%; }
  .col-1-desk {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 6px 6px 0 6px; }
  .gtr-row:last-child {
    margin: 0 6px 6px 6px; }
  .gtr-row {
    margin: 0 6px; }
  .gtr {
    padding: 0;
    margin: 0; }
    .gtr > div {
      margin: 6px;
      min-height: 260px; } }

.row {
  width: 100%; }

.row:after {
  clear: both; }

.gtr-row:before,
.gtr-row:after {
  content: " ";
  /* 1 */
  display: block;
  /* 2 */ }

.gtr-row:after {
  clear: both; }

.gtr-row {
  *zoom: 1; }

.flex-center, .background-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.clear {
  clear: both; }

.center {
  margin: 0 auto;
  text-align: center; }

.hgt-200 {
  height: 200px; }

.red-bg {
  background-color: #D24D57; }

.blue-bg {
  background-color: #4183D7; }

.green-bg {
  background-color: #16A085; }

.purple-bg {
  background-color: #663399; }

.important-text {
  font-size: 1.2rem;
  text-decoration: underline; }

.inline-block {
  display: inline-block; }

a {
  text-decoration: none;
  color: inherit;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease; }
  a:hover {
    color: #16A085; }

body {
  color: #424242;
  font-family: 'Playfair Display', serif;
  position: relative; }
  body * {
    outline: none; }

.overlay {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.6);
  height: 100%;
  width: 100%;
  z-index: 100;
  display: none;
  opacity: 0;
  -webkit-animation: fadeInFromNone 0.3s ease-out;
          animation: fadeInFromNone 0.3s ease-out; }

@-webkit-keyframes fadeInFromNone {
  0% {
    opacity: 0; }
  2% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes fadeInFromNone {
  0% {
    opacity: 0; }
  2% {
    opacity: 0; }
  100% {
    opacity: 1; } }

h2 {
  padding: 30px 0; }

.row, .gtr-row {
  color: white;
  font-size: 13px; }

article {
  margin: 0 auto;
  max-width: 680px; }

.underline {
  text-decoration: underline; }

.background-container {
  vertical-align: top;
  width: 100%;
  background: url(../images/officeBackground.jpg) center center no-repeat;
  background-attachment: fixed;
  position: relative;
  background-size: cover; }

.search-container {
  margin: 0 auto;
  background-color: rgba(255, 255, 255, 0.7);
  position: relative;
  z-index: 200; }
  .search-container input {
    display: block;
    height: 40px; }
  @media (min-width: 1px) and (max-width: 767px) {
    .search-container h1 {
      font-size: 24px;
      padding: 10px;
      margin: 10px 0 0 0; }
    .search-container .search-icon {
      font-size: 20px; } }
  @media (min-width: 768px) {
    .search-container h1 {
      font-size: 40px;
      padding: 10px;
      margin: 10px 0 0 0; }
    .search-container .search-icon {
      font-size: 34px; } }

@media (min-width: 1px) and (max-width: 767px) {
  .background-container {
    height: 400px; }
  .search-container {
    width: 98%;
    max-width: 560px; }
    .search-container input {
      width: 90%;
      margin: 0 auto; }
    .search-container h3 {
      text-align: center; } }

@media (min-width: 768px) {
  .background-container {
    height: 550px; }
  .search-container {
    width: 50%;
    max-width: 560px;
    padding: 0 60px; }
    .search-container input {
      width: 100%; } }

.search-result-container {
  box-shadow: -11px 13px 20px -14px rgba(0, 0, 0, 0.75);
  margin: 0 auto;
  z-index: 999;
  max-width: 100%;
  left: 0;
  right: 0;
  background-color: white;
  position: absolute; }
  .search-result-container .search-result {
    background-color: #fcfcf4;
    border-bottom: 1px solid #2f2f2f;
    padding: 29px 80px; }
    .search-result-container .search-result:last-of-type {
      border-bottom: none; }
    .search-result-container .search-result:hover {
      cursor: pointer; }

.search-result-active {
  background-color: #2f2f2f !important;
  color: #fcfcf4; }

h3 {
  padding: 0;
  margin: 15px; }

.highlight {
  color: white;
  background-color: #19b698;
  font-size: 1.0rem; }

.search-result {
  text-transform: capitalize; }

.adress-container {
  background-color: #eae7e3; }

.card-container {
  background-color: #fcfcf4;
  position: relative;
  color: #2f2f2f;
  box-shadow: -11px 13px 20px -14px rgba(0, 0, 0, 0.75); }
  .card-container .face-container {
    box-shadow: -11px 13px 20px -14px rgba(0, 0, 0, 0.75); }

.adress-container .gtr-row {
  background-color: #eae7e3; }

.face-container {
  background-size: cover;
  background-position: center center;
  position: absolute;
  top: 10px;
  right: 10px;
  width: 145px;
  height: 145px;
  border-radius: 50%;
  background-color: white; }

@media (min-width: 1px) and (max-width: 1024px) {
  .adress-text-container {
    font-size: 14px;
    width: auto;
    margin: 0 auto;
    padding: 160px 20px 30px 30px; }
  .face-container {
    top: 10px;
    right: 0;
    left: 0;
    margin: 0 auto;
    border-radius: 50%; }
  .all-info-link {
    margin: 20px 10px 0 0; } }

@media (min-width: 1025px) {
  .adress-text-container {
    font-size: 16px;
    padding: 160px 0 30px 10%; }
  .face-container {
    top: 10px;
    right: 10px;
    border-radius: 50%; }
  .all-info-link {
    margin: 20px 12% 0 0; } }

.icon {
  line-height: 25px;
  font-size: 18px;
  margin: 30px 15px 0 0;
  color: #676767; }

.placeholder-icon {
  color: #fcfcf4; }

.all-info-link {
  padding: 15px 5px;
  cursor: pointer;
  background-color: #2f2f2f;
  text-align: center;
  color: #fcfcf4;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease; }
  .all-info-link:hover {
    background-color: #626262; }

/* ARROW-HOLE! */
.arrow-hole {
  position: relative;
  bottom: 0;
  width: 100%;
  height: 20px;
  background-color: #eae7e3; }

.arrow-hole:before {
  right: 50%;
  border-right: 20px solid transparent; }

.arrow-hole:after {
  left: 50%;
  border-left: 20px solid transparent; }

.arrow-hole:after, .arrow-hole:before {
  border-bottom: 20px solid #eae7e3;
  content: '';
  position: absolute;
  bottom: 100%;
  width: 50%;
  box-sizing: border-box; }

.pop-up-container {
  position: fixed;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background-color: rgba(0, 0, 0, 0.6);
  display: none;
  -webkit-transition: opacity 0.4s ease-in-out;
  transition: opacity 0.4s ease-in-out;
  opacity: 0; }
  .pop-up-container .pop-up-face-container {
    margin: 0 auto;
    left: 0;
    right: 0;
    border-radius: 50%;
    position: absolute;
    background-size: cover; }
  .pop-up-container .pop-up-container-inner {
    position: relative;
    background-color: #fcfcf4;
    -webkit-animation: sk-scaleout .4s  ease-in-out;
            animation: sk-scaleout .4s  ease-in-out; }

@-webkit-keyframes sk-scaleout {
  0% {
    -webkit-transform: scale(0);
    transform: scale(0);
    opacity: 0; }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: 1; } }

@keyframes sk-scaleout {
  0% {
    -webkit-transform: scale(0);
    transform: scale(0);
    opacity: 0; }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: 1; } }
  .pop-up-container .close-pop-up {
    background-color: #D24D57;
    color: #fcfcf4;
    cursor: pointer;
    text-align: center;
    -webkit-transition: all 0.3s ease;
    transition: all 0.3s ease; }
    .pop-up-container .close-pop-up:hover {
      background-color: #bc303a; }
  @media (min-width: 1px) and (max-width: 767px) {
    .pop-up-container .pop-up-face-container {
      height: 130px;
      width: 130px;
      top: -70px; }
    .pop-up-container .pop-up-container-inner {
      font-size: 14px;
      margin: 30px auto 0 auto;
      width: 80%;
      max-width: 500px;
      padding: 55px 20px 10px 20px; }
    .pop-up-container .close-pop-up {
      font-size: 14px;
      width: 90px;
      padding: 15px 15px; } }
  @media (min-width: 768px) {
    .pop-up-container .pop-up-face-container {
      height: 200px;
      width: 200px;
      top: -100px; }
    .pop-up-container .pop-up-container-inner {
      margin: 120px auto 0 auto;
      width: 90%;
      max-width: 500px;
      padding: 100px 40px 80px 40px; }
    .pop-up-container .close-pop-up {
      width: 140px;
      padding: 20px; } }
  .pop-up-container .highlight {
    color: inherit;
    background-color: inherit; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9ub3JtYWxpemUuc2NzcyIsInN0eWxlc2hlZXQuY3NzIiwiX2dyaWQtZmxvYXQuc2NzcyIsIl9yZXNwb25zaXZlLnNjc3MiLCJfdmFyaWFibGVzLnNjc3MiLCJfaGVscGVycy5zY3NzIiwiX21haW4uc2NzcyIsIl9hZGRyZXNzLWNhcmQuc2NzcyIsIl9wb3AtdXAuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0REFBNEQ7QUFFNUQ7Ozs7R0FJRztBQUVIO0VBQ0Usd0JBQXdCO0VBQUUsT0FBTztFQUNqQywyQkFBMkI7RUFBRSxPQUFPO0VBQ3BDLCtCQUErQjtFQUFFLE9BQU8sRUFDekM7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLFVBQVUsRUFDWDs7QUFFRDtnRkFDZ0Y7QUFFaEY7Ozs7O0dBS0c7QUFFSDs7Ozs7Ozs7Ozs7OztFQWFFLGVBQWUsRUFDaEI7O0FBRUQ7OztHQUdHO0FBRUg7Ozs7RUFJRSxzQkFBc0I7RUFBRSxPQUFPO0VBQy9CLHlCQUF5QjtFQUFFLE9BQU8sRUFDbkM7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxjQUFjO0VBQ2QsVUFBVSxFQUNYOztBQUVEOzs7R0FHRztBQ05IOztFRFVFLGNBQWMsRUFDZjs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLDhCQUE4QixFQUMvQjs7QUFFRDs7R0FFRztBQUVIOztFQUVFLFdBQVcsRUFDWjs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLDBCQUEwQixFQUMzQjs7QUFFRDs7R0FFRztBQUVIOztFQUVFLGtCQUFrQixFQUNuQjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsbUJBQW1CLEVBQ3BCOztBQUVEOzs7R0FHRztBQUVIO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQixFQUNsQjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVksRUFDYjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsZUFBZSxFQUNoQjs7QUFFRDs7R0FFRztBQUVIOztFQUVFLGVB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QUF3QjtJQUN4QixvQkFBZ0I7SUFDaEIsV0FBVyxFQUFBLEVBQUE7RUEzQ2Y7SUFtREksMEJKbkRTO0lJb0RULGVKOUNjO0lJK0NkLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsa0NBQTBCO0lBQTFCLDBCQUEwQixFQUszQjtJQTVESDtNQTBETSwwQkFBd0IsRUFDekI7RUxqQ0Q7SUsxQko7TUFrRUksY0FBYztNQUNkLGFBQWE7TUFDYixXQUFXLEVBQ1o7SUFyRUg7TUF5RUksZ0JBQWdCO01BQ2hCLHlCQUF5QjtNQUN6QixXQUFXO01BQ1gsaUJBQWlCO01BQ2pCLDZCQUE2QixFQUM5QjtJQTlFSDtNQWtGSSxnQkFBZ0I7TUFDaEIsWUFBWTtNQUNaLG1CQUFtQixFQUNwQixFQUFBO0VMdERDO0lLL0JKO01BOEZJLGNBQWM7TUFDZCxhQUFhO01BQ2IsWUFBWSxFQUNiO0lBakdIO01Bb0dJLDBCQUEwQjtNQUMxQixXQUFXO01BQ1gsaUJBQWlCO01BQ2pCLDhCQUE4QixFQUMvQjtJQXhHSDtNQTJHSSxhQUFhO01BQ2IsY0FBYyxFQUNmLEVBQUE7RUE3R0g7SUFzSEksZUFBZTtJQUNmLDBCQUEwQixFQUMzQiIsImZpbGUiOiJzdHlsZXNoZWV0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHYzLjAuMiB8IE1JVCBMaWNlbnNlIHwgZ2l0LmlvL25vcm1hbGl6ZSAqL1xuXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcbiAqICAgIHVzZXIgem9vbS5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuXG5ociB7XG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cblxuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cblxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMiAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59IiwiLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4yIHwgTUlUIExpY2Vuc2UgfCBnaXQuaW8vbm9ybWFsaXplICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcbiAqICAgIHVzZXIgem9vbS5cbiAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwOyB9XG5cbltjbGFzcyo9XCJjb2xcIl0ge1xuICBmbG9hdDogbGVmdDsgfVxuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiBNb2JpbGUtc21hbGwgIDFweCAtIDMyMHB4XG4gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5AbWVkaWEgKG1pbi13aWR0aDogMXB4KSBhbmQgKG1heC13aWR0aDogNDUwcHgpIHtcbiAgLmNvbC0xMi1tcyB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLmNvbC0xMS1tcyB7XG4gICAgd2lkdGg6IDkxLjY2NjY3JTsgfVxuICAuY29sLTEwLW1zIHtcbiAgICB3aWR0aDogODMuMzMzMzMlOyB9XG4gIC5jb2wtOS1tcyB7XG4gICAgd2lkdGg6IDc1JTsgfVxuICAuY29sLTgtbXMge1xuICAgIHdpZHRoOiA2Ni42NjY2NyU7IH1cbiAgLmNvbC03LW1zIHtcbiAgICB3aWR0aDogNTguMzMzMzMlOyB9XG4gIC5jb2wtNi1tcyB7XG4gICAgd2lkdGg6IDUwJTsgfVxuICAuY29sLTUtbXMge1xuICAgIHdpZHRoOiA0MS42NjY2NyU7IH1cbiAgLmNvbC00LW1zIHtcbiAgICB3aWR0aDogMzMuMzMzMzMlOyB9XG4gIC5jb2wtMy1tcyB7XG4gICAgd2lkdGg6IDI1JTsgfVxuICAuY29sLTItbXMge1xuICAgIHdpZHRoOiAxNi42NjY2NyU7IH1cbiAgLmNvbC0xLW1zIHtcbiAgICB3aWR0aDogOC4zMzMzMyU7IH1cbiAgLmd0ci1yb3c6Zmlyc3QtY2hpbGQge1xuICAgIG1hcmdpbjogM3B4IDNweCAwIDNweDsgfVxuICAuZ3RyLXJvdzpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW46IDAgM3B4IDNweCAzcHg7IH1cbiAgLmd0ci1yb3cge1xuICAgIG1hcmdpbjogMCAzcHg7IH1cbiAgLmd0ciB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7IH1cbiAgICAuZ3RyID4gZGl2IHtcbiAgICAgIG1hcmdpbjogM3B4O1xuICAgICAgbWluLWhlaWdodDogMjAwcHg7IH0gfVxuXG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiBNb2JpbGUtbGFyZ2UgIDMyMXB4IC0gNzY3cHhcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbkBtZWRpYSAobWluLXdpZHRoOiA0NTFweCkgYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5jb2wtMTItbWwge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5jb2wtMTEtbWwge1xuICAgIHdpZHRoOiA5MS42NjY2NyU7IH1cbiAgLmNvbC0xMC1tbCB7XG4gICAgd2lkdGg6IDgzLjMzMzMzJTsgfVxuICAuY29sLTktbWwge1xuICAgIHdpZHRoOiA3NSU7IH1cbiAgLmNvbC04LW1sIHtcbiAgICB3aWR0aDogNjYuNjY2NjclOyB9XG4gIC5jb2wtNy1tbCB7XG4gICAgd2lkdGg6IDU4LjMzMzMzJTsgfVxuICAuY29sLTYtbWwge1xuICAgIHdpZHRoOiA1MCU7IH1cbiAgLmNvbC01LW1sIHtcbiAgICB3aWR0aDogNDEuNjY2NjclOyB9XG4gIC5jb2wtNC1tbCB7XG4gICAgd2lkdGg6IDMzLjMzMzMzJTsgfVxuICAuY29sLTMtbWwge1xuICAgIHdpZHRoOiAyNSU7IH1cbiAgLmNvbC0yLW1sIHtcbiAgICB3aWR0aDogMTYuNjY2NjclOyB9XG4gIC5jb2wtMS1tbCB7XG4gICAgd2lkdGg6IDguMzMzMzMlOyB9XG4gIC5ndHItcm93OmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW46IDZweCA2cHggMCA2cHg7IH1cbiAgLmd0ci1yb3c6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luOiAwIDZweCA2cHggNnB4OyB9XG4gIC5ndHItcm93IHtcbiAgICBtYXJnaW46IDAgNnB4OyB9XG4gIC5ndHIge1xuICAgIG1hcmdpbjogMDsgfVxuICAgIC5ndHIgPiBkaXYge1xuICAgICAgbWFyZ2luOiA2cHg7XG4gICAgICBtaW4taGVpZ2h0OiAzMDBweDsgfSB9XG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIFRBQkxFVCAgNzY4cHggLSAxMDI0cHhcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuY29sLTEyLXRhYiB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLmNvbC0xMS10YWIge1xuICAgIHdpZHRoOiA5MS42NjY2NyU7IH1cbiAgLmNvbC0xMC10YWIge1xuICAgIHdpZHRoOiA4My4zMzMzMyU7IH1cbiAgLmNvbC05LXRhYiB7XG4gICAgd2lkdGg6IDc1JTsgfVxuICAuY29sLTgtdGFiIHtcbiAgICB3aWR0aDogNjYuNjY2NjclOyB9XG4gIC5jb2wtNy10YWIge1xuICAgIHdpZHRoOiA1OC4zMzMzMyU7IH1cbiAgLmNvbC02LXRhYiB7XG4gICAgd2lkdGg6IDUwJTsgfVxuICAuY29sLTUtdGFiIHtcbiAgICB3aWR0aDogNDEuNjY2NjclOyB9XG4gIC5jb2wtNC10YWIge1xuICAgIHdpZHRoOiAzMy4zMzMzMyU7IH1cbiAgLmNvbC0zLXRhYiB7XG4gICAgd2lkdGg6IDI1JTsgfVxuICAuY29sLTItdGFiIHtcbiAgICB3aWR0aDogMTYuNjY2NjclOyB9XG4gIC5jb2wtMS10YWIge1xuICAgIHdpZHRoOiA4LjMzMzMzJTsgfVxuICAuZ3RyLXJvdzpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luOiA0cHggNHB4IDAgNHB4OyB9XG4gIC5ndHItcm93Omxhc3QtY2hpbGQge1xuICAgIG1hcmdpbjogMCA0cHggNHB4IDRweDsgfVxuICAuZ3RyLXJvdyB7XG4gICAgbWFyZ2luOiAwIDRweDsgfVxuICAuZ3RyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDsgfVxuICAgIC5ndHIgPiBkaXYge1xuICAgICAgbWFyZ2luOiA0cHg7XG4gICAgICBtaW4taGVpZ2h0OiAyMzBweDsgfSB9XG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIERFU0tUT1AgPiAxMDI0cHhcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmNvbC0xMi1kZXNrIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuY29sLTExLWRlc2sge1xuICAgIHdpZHRoOiA5MS42NjY2NyU7IH1cbiAgLmNvbC0xMC1kZXNrIHtcbiAgICB3aWR0aDogODMuMzMzMzMlOyB9XG4gIC5jb2wtOS1kZXNrIHtcbiAgICB3aWR0aDogNzUlOyB9XG4gIC5jb2wtOC1kZXNrIHtcbiAgICB3aWR0aDogNjYuNjY2NjclOyB9XG4gIC5jb2wtNy1kZXNrIHtcbiAgICB3aWR0aDogNTguMzMzMzMlOyB9XG4gIC5jb2wtNi1kZXNrIHtcbiAgICB3aWR0aDogNTAlOyB9XG4gIC5jb2wtNS1kZXNrIHtcbiAgICB3aWR0aDogNDEuNjY2NjclOyB9XG4gIC5jb2wtNC1kZXNrIHtcbiAgICB3aWR0aDogMzMuMzMzMzMlOyB9XG4gIC5jb2wtMy1kZXNrIHtcbiAgICB3aWR0aDogMjUlOyB9XG4gIC5jb2wtMi1kZXNrIHtcbiAgICB3aWR0aDogMTYuNjY2NjclOyB9XG4gIC5jb2wtMS1kZXNrIHtcbiAgICB3aWR0aDogOC4zMzMzMyU7IH1cbiAgLmd0ci1yb3c6Zmlyc3QtY2hpbGQge1xuICAgIG1hcmdpbjogNnB4IDZweCAwIDZweDsgfVxuICAuZ3RyLXJvdzpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW46IDAgNnB4IDZweCA2cHg7IH1cbiAgLmd0ci1yb3cge1xuICAgIG1hcmdpbjogMCA2cHg7IH1cbiAgLmd0ciB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7IH1cbiAgICAuZ3RyID4gZGl2IHtcbiAgICAgIG1hcmdpbjogNnB4O1xuICAgICAgbWluLWhlaWdodDogMjYwcHg7IH0gfVxuXG4ucm93IHtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLnJvdzphZnRlciB7XG4gIGNsZWFyOiBib3RoOyB9XG5cbi5ndHItcm93OmJlZm9yZSxcbi5ndHItcm93OmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG4gIC8qIDIgKi8gfVxuXG4uZ3RyLXJvdzphZnRlciB7XG4gIGNsZWFyOiBib3RoOyB9XG5cbi5ndHItcm93IHtcbiAgKnpvb206IDE7IH1cblxuLmZsZXgtY2VudGVyLCAuYmFja2dyb3VuZC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uY2xlYXIge1xuICBjbGVhcjogYm90aDsgfVxuXG4uY2VudGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uaGd0LTIwMCB7XG4gIGhlaWdodDogMjAwcHg7IH1cblxuLnJlZC1iZyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNEMjRENTc7IH1cblxuLmJsdWUtYmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDE4M0Q3OyB9XG5cbi5ncmVlbi1iZyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxNkEwODU7IH1cblxuLnB1cnBsZS1iZyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2NjMzOTk7IH1cblxuLmltcG9ydGFudC10ZXh0IHtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG5cbi5pbmxpbmUtYmxvY2sge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7IH1cbiAgYTpob3ZlciB7XG4gICAgY29sb3I6ICMxNkEwODU7IH1cblxuYm9keSB7XG4gIGNvbG9yOiAjNDI0MjQyO1xuICBmb250LWZhbWlseTogJ1BsYXlmYWlyIERpc3BsYXknLCBzZXJpZjtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIGJvZHkgKiB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuXG4ub3ZlcmxheSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjYpO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAxMDA7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogZmFkZUluRnJvbU5vbmUgMC4zcyBlYXNlLW91dDsgfVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbkZyb21Ob25lIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7IH1cbiAgMiUge1xuICAgIG9wYWNpdHk6IDA7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbmgyIHtcbiAgcGFkZGluZzogMzBweCAwOyB9XG5cbi5yb3csIC5ndHItcm93IHtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDEzcHg7IH1cblxuYXJ0aWNsZSB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDY4MHB4OyB9XG5cbi51bmRlcmxpbmUge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4uYmFja2dyb3VuZC1jb250YWluZXIge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltYWdlcy9vZmZpY2VCYWNrZ3JvdW5kLmpwZykgY2VudGVyIGNlbnRlciBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuXG4uc2VhcmNoLWNvbnRhaW5lciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjAwOyB9XG4gIC5zZWFyY2gtY29udGFpbmVyIGlucHV0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDQwcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDFweCkgYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLnNlYXJjaC1jb250YWluZXIgaDEge1xuICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgIG1hcmdpbjogMTBweCAwIDAgMDsgfVxuICAgIC5zZWFyY2gtY29udGFpbmVyIC5zZWFyY2gtaWNvbiB7XG4gICAgICBmb250LXNpemU6IDIwcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuc2VhcmNoLWNvbnRhaW5lciBoMSB7XG4gICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgbWFyZ2luOiAxMHB4IDAgMCAwOyB9XG4gICAgLnNlYXJjaC1jb250YWluZXIgLnNlYXJjaC1pY29uIHtcbiAgICAgIGZvbnQtc2l6ZTogMzRweDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxcHgpIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYmFja2dyb3VuZC1jb250YWluZXIge1xuICAgIGhlaWdodDogNDAwcHg7IH1cbiAgLnNlYXJjaC1jb250YWluZXIge1xuICAgIHdpZHRoOiA5OCU7XG4gICAgbWF4LXdpZHRoOiA1NjBweDsgfVxuICAgIC5zZWFyY2gtY29udGFpbmVyIGlucHV0IHtcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAgIC5zZWFyY2gtY29udGFpbmVyIGgzIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYmFja2dyb3VuZC1jb250YWluZXIge1xuICAgIGhlaWdodDogNTUwcHg7IH1cbiAgLnNlYXJjaC1jb250YWluZXIge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWF4LXdpZHRoOiA1NjBweDtcbiAgICBwYWRkaW5nOiAwIDYwcHg7IH1cbiAgICAuc2VhcmNoLWNvbnRhaW5lciBpbnB1dCB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5zZWFyY2gtcmVzdWx0LWNvbnRhaW5lciB7XG4gIGJveC1zaGFkb3c6IC0xMXB4IDEzcHggMjBweCAtMTRweCByZ2JhKDAsIDAsIDAsIDAuNzUpO1xuICBtYXJnaW46IDAgYXV0bztcbiAgei1pbmRleDogOTk5O1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcG9zaXRpb246IGFic29sdXRlOyB9XG4gIC5zZWFyY2gtcmVzdWx0LWNvbnRhaW5lciAuc2VhcmNoLXJlc3VsdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmNDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzJmMmYyZjtcbiAgICBwYWRkaW5nOiAyOXB4IDgwcHg7IH1cbiAgICAuc2VhcmNoLXJlc3VsdC1jb250YWluZXIgLnNlYXJjaC1yZXN1bHQ6bGFzdC1vZi10eXBlIHtcbiAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7IH1cbiAgICAuc2VhcmNoLXJlc3VsdC1jb250YWluZXIgLnNlYXJjaC1yZXN1bHQ6aG92ZXIge1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi5zZWFyY2gtcmVzdWx0LWFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZjJmMmYgIWltcG9ydGFudDtcbiAgY29sb3I6ICNmY2ZjZjQ7IH1cblxuaDMge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDE1cHg7IH1cblxuLmhpZ2hsaWdodCB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE5YjY5ODtcbiAgZm9udC1zaXplOiAxLjByZW07IH1cblxuLnNlYXJjaC1yZXN1bHQge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsgfVxuXG4uYWRyZXNzLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlYWU3ZTM7IH1cblxuLmNhcmQtY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmNDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogIzJmMmYyZjtcbiAgYm94LXNoYWRvdzogLTExcHggMTNweCAyMHB4IC0xNHB4IHJnYmEoMCwgMCwgMCwgMC43NSk7IH1cbiAgLmNhcmQtY29udGFpbmVyIC5mYWNlLWNvbnRhaW5lciB7XG4gICAgYm94LXNoYWRvdzogLTExcHggMTNweCAyMHB4IC0xNHB4IHJnYmEoMCwgMCwgMCwgMC43NSk7IH1cblxuLmFkcmVzcy1jb250YWluZXIgLmd0ci1yb3cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWFlN2UzOyB9XG5cbi5mYWNlLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMHB4O1xuICByaWdodDogMTBweDtcbiAgd2lkdGg6IDE0NXB4O1xuICBoZWlnaHQ6IDE0NXB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxcHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmFkcmVzcy10ZXh0LWNvbnRhaW5lciB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDE2MHB4IDIwcHggMzBweCAzMHB4OyB9XG4gIC5mYWNlLWNvbnRhaW5lciB7XG4gICAgdG9wOiAxMHB4O1xuICAgIHJpZ2h0OiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG4gIC5hbGwtaW5mby1saW5rIHtcbiAgICBtYXJnaW46IDIwcHggMTBweCAwIDA7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5hZHJlc3MtdGV4dC1jb250YWluZXIge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBwYWRkaW5nOiAxNjBweCAwIDMwcHggMTAlOyB9XG4gIC5mYWNlLWNvbnRhaW5lciB7XG4gICAgdG9wOiAxMHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuICAuYWxsLWluZm8tbGluayB7XG4gICAgbWFyZ2luOiAyMHB4IDEyJSAwIDA7IH0gfVxuXG4uaWNvbiB7XG4gIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICBmb250LXNpemU6IDE4cHg7XG4gIG1hcmdpbjogMzBweCAxNXB4IDAgMDtcbiAgY29sb3I6ICM2NzY3Njc7IH1cblxuLnBsYWNlaG9sZGVyLWljb24ge1xuICBjb2xvcjogI2ZjZmNmNDsgfVxuXG4uYWxsLWluZm8tbGluayB7XG4gIHBhZGRpbmc6IDE1cHggNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZjJmMmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNmY2ZjZjQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7IH1cbiAgLmFsbC1pbmZvLWxpbms6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM2MjYyNjI7IH1cblxuLyogQVJST1ctSE9MRSEgKi9cbi5hcnJvdy1ob2xlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlYWU3ZTM7IH1cblxuLmFycm93LWhvbGU6YmVmb3JlIHtcbiAgcmlnaHQ6IDUwJTtcbiAgYm9yZGVyLXJpZ2h0OiAyMHB4IHNvbGlkIHRyYW5zcGFyZW50OyB9XG5cbi5hcnJvdy1ob2xlOmFmdGVyIHtcbiAgbGVmdDogNTAlO1xuICBib3JkZXItbGVmdDogMjBweCBzb2xpZCB0cmFuc3BhcmVudDsgfVxuXG4uYXJyb3ctaG9sZTphZnRlciwgLmFycm93LWhvbGU6YmVmb3JlIHtcbiAgYm9yZGVyLWJvdHRvbTogMjBweCBzb2xpZCAjZWFlN2UzO1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDEwMCU7XG4gIHdpZHRoOiA1MCU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuLnBvcC11cC1jb250YWluZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgZGlzcGxheTogbm9uZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UtaW4tb3V0O1xuICBvcGFjaXR5OiAwOyB9XG4gIC5wb3AtdXAtY29udGFpbmVyIC5wb3AtdXAtZmFjZS1jb250YWluZXIge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gIC5wb3AtdXAtY29udGFpbmVyIC5wb3AtdXAtY29udGFpbmVyLWlubmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmNDtcbiAgICBhbmltYXRpb246IHNrLXNjYWxlb3V0IC40cyAgZWFzZS1pbi1vdXQ7IH1cblxuQGtleWZyYW1lcyBzay1zY2FsZW91dCB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuICAucG9wLXVwLWNvbnRhaW5lciAuY2xvc2UtcG9wLXVwIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDI0RDU3O1xuICAgIGNvbG9yOiAjZmNmY2Y0O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsgfVxuICAgIC5wb3AtdXAtY29udGFpbmVyIC5jbG9zZS1wb3AtdXA6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2JjMzAzYTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMXB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAucG9wLXVwLWNvbnRhaW5lciAucG9wLXVwLWZhY2UtY29udGFpbmVyIHtcbiAgICAgIGhlaWdodDogMTMwcHg7XG4gICAgICB3aWR0aDogMTMwcHg7XG4gICAgICB0b3A6IC03MHB4OyB9XG4gICAgLnBvcC11cC1jb250YWluZXIgLnBvcC11cC1jb250YWluZXItaW5uZXIge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgbWFyZ2luOiAzMHB4IGF1dG8gMCBhdXRvO1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgICBwYWRkaW5nOiA1NXB4IDIwcHggMTBweCAyMHB4OyB9XG4gICAgLnBvcC11cC1jb250YWluZXIgLmNsb3NlLXBvcC11cCB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICB3aWR0aDogOTBweDtcbiAgICAgIHBhZGRpbmc6IDE1cHggMTVweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5wb3AtdXAtY29udGFpbmVyIC5wb3AtdXAtZmFjZS1jb250YWluZXIge1xuICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgIHRvcDogLTEwMHB4OyB9XG4gICAgLnBvcC11cC1jb250YWluZXIgLnBvcC11cC1jb250YWluZXItaW5uZXIge1xuICAgICAgbWFyZ2luOiAxMjBweCBhdXRvIDAgYXV0bztcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgICAgcGFkZGluZzogMTAwcHggNDBweCA4MHB4IDQwcHg7IH1cbiAgICAucG9wLXVwLWNvbnRhaW5lciAuY2xvc2UtcG9wLXVwIHtcbiAgICAgIHdpZHRoOiAxNDBweDtcbiAgICAgIHBhZGRpbmc6IDIwcHg7IH0gfVxuICAucG9wLXVwLWNvbnRhaW5lciAuaGlnaGxpZ2h0IHtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0OyB9XG4iLCJbY2xhc3MqPVwiY29sXCJdIHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIE1vYmlsZS1zbWFsbCAgMXB4IC0gMzIwcHhcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cbkBpbmNsdWRlIHJlc3BvbmQtdG8obW9iaWxlLXNtYWxsKSB7XG5cbiAgLmNvbC0xMi1tc1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMTIvMTIpO1xuICB9XG4gIC5jb2wtMTEtbXNcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDExLzEyKTtcbiAgfVxuICAuY29sLTEwLW1zXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxMC8xMik7XG4gIH1cbiAgLmNvbC05LW1zXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg5LzEyKTtcbiAgfVxuICAuY29sLTgtbXNcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDgvMTIpO1xuICB9XG4gIC5jb2wtNy1tc1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNy8xMik7XG4gIH1cbiAgLmNvbC02LW1zXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg2LzEyKTtcbiAgfVxuICAuY29sLTUtbXNcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDUvMTIpO1xuICB9XG4gIC5jb2wtNC1tc1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNC8xMik7XG4gIH1cbiAgLmNvbC0zLW1zXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgzLzEyKTtcbiAgfVxuICAuY29sLTItbXNcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDIvMTIpO1xuICB9XG4gIC5jb2wtMS1tc1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMS8xMik7XG4gIH1cblxuICAuZ3RyLXJvdzpmaXJzdC1jaGlsZFxuICB7XG4gICAgbWFyZ2luOiAkbXMtZ3RyICRtcy1ndHIgMCAkbXMtZ3RyO1xuICB9XG4gIC5ndHItcm93Omxhc3QtY2hpbGRcbiAge1xuICAgIG1hcmdpbjogMCAkbXMtZ3RyICRtcy1ndHIgICRtcy1ndHI7XG4gIH1cbiAgLmd0ci1yb3dcbiAge1xuICAgIG1hcmdpbjogMCAkbXMtZ3RyO1xuICB9XG4gIC5ndHJ7XG4gICAgcGFkZGluZzowO1xuICAgIG1hcmdpbjowO1xuXG4gICAgPiBkaXZ7XG4gICAgICBtYXJnaW46JG1zLWd0cjtcbiAgICAgIG1pbi1oZWlnaHQ6ICRtcy1ndHItbWluLWg7XG4gICAgfVxuICB9XG59XG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiBNb2JpbGUtbGFyZ2UgIDMyMXB4IC0gNzY3cHhcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuQGluY2x1ZGUgcmVzcG9uZC10byhtb2JpbGUtbGFyZ2UpIHtcbiAgLmNvbC0xMi1tbFxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMTIvMTIpO1xuICB9XG4gIC5jb2wtMTEtbWxcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDExLzEyKTtcbiAgfVxuICAuY29sLTEwLW1sXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxMC8xMik7XG4gIH1cbiAgLmNvbC05LW1sXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg5LzEyKTtcbiAgfVxuICAuY29sLTgtbWxcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDgvMTIpO1xuICB9XG4gIC5jb2wtNy1tbFxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNy8xMik7XG4gIH1cbiAgLmNvbC02LW1sXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg2LzEyKTtcbiAgfVxuICAuY29sLTUtbWxcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDUvMTIpO1xuICB9XG4gIC5jb2wtNC1tbFxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNC8xMik7XG4gIH1cbiAgLmNvbC0zLW1sXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgzLzEyKTtcbiAgfVxuICAuY29sLTItbWxcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDIvMTIpO1xuICB9XG4gIC5jb2wtMS1tbFxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMS8xMik7XG4gIH1cblxuICAuZ3RyLXJvdzpmaXJzdC1jaGlsZFxuICB7XG4gICAgbWFyZ2luOiAkbWwtZ3RyICRtbC1ndHIgMCAkbWwtZ3RyO1xuICB9XG4gIC5ndHItcm93Omxhc3QtY2hpbGRcbiAge1xuICAgIG1hcmdpbjogMCAkbWwtZ3RyICRtbC1ndHIgICRtbC1ndHI7XG4gIH1cbiAgLmd0ci1yb3dcbiAge1xuICAgIG1hcmdpbjogMCAkbWwtZ3RyO1xuICB9XG4gIC5ndHJ7XG5cbiAgICBtYXJnaW46MDtcbiAgICA+IGRpdntcbiAgICAgIG1hcmdpbjokbWwtZ3RyO1xuICAgICAgbWluLWhlaWdodDogJG1sLWd0ci1taW4taDtcbiAgICB9XG4gIH1cbn1cbi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIFRBQkxFVCAgNzY4cHggLSAxMDI0cHhcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cblxuQGluY2x1ZGUgcmVzcG9uZC10byh0YWJsZXQpIHtcbiAgLmNvbC0xMi10YWJcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDEyLzEyKTtcbiAgfVxuICAuY29sLTExLXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMTEvMTIpO1xuICB9XG4gIC5jb2wtMTAtdGFiXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxMC8xMik7XG4gIH1cbiAgLmNvbC05LXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoOS8xMik7XG4gIH1cbiAgLmNvbC04LXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoOC8xMik7XG4gIH1cbiAgLmNvbC03LXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNy8xMik7XG4gIH1cbiAgLmNvbC02LXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNi8xMik7XG4gIH1cbiAgLmNvbC01LXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNS8xMik7XG4gIH1cbiAgLmNvbC00LXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNC8xMik7XG4gIH1cbiAgLmNvbC0zLXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMy8xMik7XG4gIH1cbiAgLmNvbC0yLXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMi8xMik7XG4gIH1cbiAgLmNvbC0xLXRhYlxuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMS8xMik7XG4gIH1cblxuICAuZ3RyLXJvdzpmaXJzdC1jaGlsZFxuICB7XG4gICAgbWFyZ2luOiAkdGFiLWd0ciAkdGFiLWd0ciAwICR0YWItZ3RyO1xuICB9XG4gIC5ndHItcm93Omxhc3QtY2hpbGRcbiAge1xuICAgIG1hcmdpbjogMCAkdGFiLWd0ciAkdGFiLWd0ciAgJHRhYi1ndHI7XG4gIH1cbiAgLmd0ci1yb3dcbiAge1xuICAgIG1hcmdpbjogMCAkdGFiLWd0cjtcbiAgfVxuXG4gIC5ndHJ7XG4gICAgLy8gd2lkdGg6MjUlO1xuICAgIC8vIGZsb2F0OmxlZnQ7XG4gICAgcGFkZGluZzowO1xuICAgIG1hcmdpbjowO1xuICAgID4gZGl2e1xuICAgICAgbWFyZ2luOiR0YWItZ3RyO1xuICAgICAgbWluLWhlaWdodDogJHRhYi1ndHItbWluLWg7XG4gICAgfVxuICB9XG59XG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiBERVNLVE9QID4gMTAyNHB4XG4gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5AaW5jbHVkZSByZXNwb25kLXRvKGRlc2t0b3ApIHtcbiAgLmNvbC0xMi1kZXNrXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxMi8xMik7XG4gIH1cbiAgLmNvbC0xMS1kZXNrXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxMS8xMik7XG4gIH1cbiAgLmNvbC0xMC1kZXNrXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgxMC8xMik7XG4gIH1cbiAgLmNvbC05LWRlc2tcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDkvMTIpO1xuICB9XG4gIC5jb2wtOC1kZXNrXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg4LzEyKTtcbiAgfVxuICAuY29sLTctZGVza1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNy8xMik7XG4gIH1cbiAgLmNvbC02LWRlc2tcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDYvMTIpO1xuICB9XG4gIC5jb2wtNS1kZXNrXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSg1LzEyKTtcbiAgfVxuICAuY29sLTQtZGVza1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoNC8xMik7XG4gIH1cbiAgLmNvbC0zLWRlc2tcbiAge1xuICAgIHdpZHRoOiBwZXJjZW50YWdlKDMvMTIpO1xuICB9XG4gIC5jb2wtMi1kZXNrXG4gIHtcbiAgICB3aWR0aDogcGVyY2VudGFnZSgyLzEyKTtcbiAgfVxuICAuY29sLTEtZGVza1xuICB7XG4gICAgd2lkdGg6IHBlcmNlbnRhZ2UoMS8xMik7XG4gIH1cbiAgLmd0ci1yb3c6Zmlyc3QtY2hpbGRcbiAge1xuICAgIG1hcmdpbjogJGRlc2stZ3RyICRkZXNrLWd0ciAwICRkZXNrLWd0cjtcbiAgfVxuICAuZ3RyLXJvdzpsYXN0LWNoaWxkXG4gIHtcbiAgICBtYXJnaW46IDAgJGRlc2stZ3RyICRkZXNrLWd0ciAgJGRlc2stZ3RyO1xuICB9XG4gIC5ndHItcm93XG4gIHtcbiAgICBtYXJnaW46IDAgJGRlc2stZ3RyO1xuICB9XG4gIC5ndHJ7XG4gICAgcGFkZGluZzowO1xuICAgIG1hcmdpbjowO1xuICAgID4gZGl2e1xuICAgICAgbWFyZ2luOiRkZXNrLWd0cjtcbiAgICAgIG1pbi1oZWlnaHQ6ICRkZXNrLWd0ci1taW4taDtcbiAgICB9XG4gIH1cbn1cbi5yb3dcbntcbiAgd2lkdGg6IDEwMCU7XG59XG4ucm93OmFmdGVyXG57XG4gIGNsZWFyOiBib3RoO1xufVxuLmd0ci1yb3c6YmVmb3JlLFxuLmd0ci1yb3c6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjsgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgLyogMiAqL1xufVxuLmd0ci1yb3c6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbn1cbi5ndHItcm93IHtcbiAgKnpvb206IDE7XG59XG4uZ3Rye1xuLy8gIGJhY2tncm91bmQ6JG9mZldoaXRlO1xuICA+IGRpdntcbiAgICAvL2JhY2tncm91bmQ6JHJlZDtcbiAgfVxufVxuIiwiQG1peGluIHJlc3BvbmQtdG8oJGJyZWFrcG9pbnQpIHtcbiAgQGlmICRicmVha3BvaW50ID09IFwibW9iaWxlLXNtYWxsXCIge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxcHgpIGFuZCAobWF4LXdpZHRoOiAkbW9iaWxlLXNtYWxsLWJyZWFrKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJGJyZWFrcG9pbnQgPT0gXCJtb2JpbGUtbGFyZ2VcIiB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtb2JpbGUtc21hbGwtYnJlYWsrMSkgYW5kIChtYXgtd2lkdGg6ICRtb2JpbGUtbGFyZ2UtYnJlYWspIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkYnJlYWtwb2ludCA9PSBcInRhYmxldFwiIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1vYmlsZS1sYXJnZS1icmVhaysxKSBhbmQgKG1heC13aWR0aDogJHRhYmxldC1icmVhaykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG4gIEBlbHNlIGlmICRicmVha3BvaW50ID09IFwiZGVza3RvcFwiIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldC1icmVhaysxKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbiAgQGVsc2UgaWYgJGJyZWFrcG9pbnQgPT0gXCJub3QtZGVza3RvcFwiIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMXB4KSBhbmQgKG1heC13aWR0aDogJHRhYmxldC1icmVhaykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG5cbiAgQGVsc2UgaWYgJGJyZWFrcG9pbnQgPT0gXCJwaG9uZS1kZXZpY2VcIiB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDFweCkgYW5kIChtYXgtd2lkdGg6ICRtb2JpbGUtbGFyZ2UtYnJlYWspIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuICBAZWxzZSBpZiAkYnJlYWtwb2ludCA9PSBcImxhcmdlLWRldmljZVwiIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1vYmlsZS1sYXJnZS1icmVhaysxcHgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuIiwiJHJlZDogI0QyNEQ1NztcbiRibHVlOiAjNDE4M0Q3O1xuJGdyZWVuOiAjMTZBMDg1O1xuJHB1cnBsZTogIzY2MzM5OTtcbiRkYXJrR3JleTogIzJmMmYyZjtcbi8vJG9mZldoaXRlOiAjZjNmNGU5O1xuJG9mZldoaXRlOiAjZmNmY2Y0O1xuJGVhcnRoQmVpZ2U6ICAjZTNkZmRhO1xuJG92ZXJsYXk6IHJnYmEoMCwwLDAsMC42KTtcbiRib3hTaGFkb3c6IC0xMXB4IDEzcHggMjBweCAtMTRweCByZ2JhKDAsMCwwLDAuNzUpO1xuXG4kbW9iaWxlLXNtYWxsLWJyZWFrOiA0NTBweDtcbiRtb2JpbGUtbGFyZ2UtYnJlYWs6IDc2N3B4O1xuJHRhYmxldC1icmVhazogMTAyNHB4O1xuXG4kbXMtZ3RyLW1pbi1oOiAyMDBweDtcbiRtcy1ndHI6IDNweDtcblxuJG1sLWd0ci1taW4taDogMzAwcHg7XG4kbWwtZ3RyOiA2cHg7XG5cbiR0YWItZ3RyLW1pbi1oOiAyMzBweDtcbiR0YWItZ3RyOiA0cHg7XG5cbiRkZXNrLWd0ci1taW4taDogMjYwcHg7XG4kZGVzay1ndHI6IDZweDtcbiIsIi8vIEp1c3RpZnkgY29udGVudCB2ZXJ0aWNhbGx5IGFuZCBob3Jpem9udGFsbHlcbi5mbGV4LWNlbnRlclxue1xuICBkaXNwbGF5OmZsZXg7XG4gIGp1c3RpZnktY29udGVudDpjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOmNlbnRlcjtcbn1cblxuLy8gQ2xlYXIgZmxvYXRzXG4uY2xlYXJcbntcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi8vIENlbnRlciBjb250ZW50XG4uY2VudGVyXG57XG4gIG1hcmdpbjogMCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5oZ3QtMjAwXG57XG4gIGhlaWdodDogMjAwcHg7XG59XG4ucmVkLWJnXG57XG5iYWNrZ3JvdW5kLWNvbG9yOiAkcmVkO1xufVxuLmJsdWUtYmdcbntcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XG59XG4uZ3JlZW4tYmdcbntcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuO1xufVxuLnB1cnBsZS1iZ1xue1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHVycGxlO1xufVxuLmltcG9ydGFudC10ZXh0XG57XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi5pbmxpbmUtYmxvY2tcbntcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG5hXG57XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICY6aG92ZXJcbiAge1xuICAgIC8vdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgY29sb3I6ICRncmVlbjtcbiAgfVxuXG59XG4iLCJib2R5XG57XG4gIGNvbG9yOiAjNDI0MjQyO1xuICBmb250LWZhbWlseTogJ1BsYXlmYWlyIERpc3BsYXknLCBzZXJpZjtcbiAgKiB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ub3ZlcmxheVxue1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICRvdmVybGF5O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAxMDA7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIC8vdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG4gIGFuaW1hdGlvbjogZmFkZUluRnJvbU5vbmUgMC4zcyBlYXNlLW91dDtcbiAgQGtleWZyYW1lcyBmYWRlSW5Gcm9tTm9uZSB7XG4gICAgICAwJSB7XG4gICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgIH1cbiAgICAgIDIlIHtcbiAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgfVxuICAgICAgMTAwJSB7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cbiAgfVxufVxuaDJcbntcbiAgcGFkZGluZzogMzBweCAwO1xufVxuLnJvdywgLmd0ci1yb3dcbntcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDEzcHg7XG59XG5hcnRpY2xlXG57XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDY4MHB4O1xufVxuXG4udW5kZXJsaW5lXG57XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuLmJhY2tncm91bmQtY29udGFpbmVyXG57XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2VzL29mZmljZUJhY2tncm91bmQuanBnKSBjZW50ZXIgY2VudGVyIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuLy8gIGJhY2tncm91bmQtc2l6ZTogMTAwJSBhdXRvO1xuICAvL3BhZGRpbmc6ICAgMTAlIDA7XG4gYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgQGV4dGVuZCAuZmxleC1jZW50ZXJcbn1cblxuLnNlYXJjaC1jb250YWluZXJcbntcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC43KTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OjIwMDtcbiAgaW5wdXRcbiAge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxuXG5cbkBpbmNsdWRlIHJlc3BvbmQtdG8ocGhvbmUtZGV2aWNlKSB7XG4gIGgxXG4gIHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW46IDEwcHggMCAwIDA7XG4gIH1cblxuXG4uc2VhcmNoLWljb25cbntcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5cbn1cbkBpbmNsdWRlIHJlc3BvbmQtdG8obGFyZ2UtZGV2aWNlKSB7XG4gIGgxXG4gIHtcbiAgICBmb250LXNpemU6IDQwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBtYXJnaW46IDEwcHggMCAwIDA7XG4gIH1cblxuXG4uc2VhcmNoLWljb25cbntcbiAgZm9udC1zaXplOiAzNHB4O1xufVxufVxufVxuXG5AbWVkaWEobWluLXdpZHRoOiAxcHgpIGFuZCAobWF4LXdpZHRoOiAkbW9iaWxlLWxhcmdlLWJyZWFrKVxue1xuICAuYmFja2dyb3VuZC1jb250YWluZXJcbiAge1xuICAgIGhlaWdodDogNDAwcHg7XG4gIH1cbiAgLnNlYXJjaC1jb250YWluZXJcbiAge1xuICAgIHdpZHRoOiA5OCU7XG4gICAgbWF4LXdpZHRoOiA1NjBweDtcblxuICAgIGlucHV0XG4gICAge1xuICAgICAgd2lkdGg6IDkwJTtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgICBoM1xuICAgIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAkbW9iaWxlLWxhcmdlLWJyZWFrKzEpXG57XG4gIC5iYWNrZ3JvdW5kLWNvbnRhaW5lclxuICB7XG4gICAgaGVpZ2h0OiA1NTBweDtcbiAgfVxuICAuc2VhcmNoLWNvbnRhaW5lclxuICB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBtYXgtd2lkdGg6IDU2MHB4O1xuICAgIC8vcGFkZGluZzogMTBweCA4MHB4IDMwcHggODBweDtcbiAgICBwYWRkaW5nOiAwIDYwcHg7XG5cbiAgICBpbnB1dFxuICAgIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgfVxufVxuXG4uc2VhcmNoLXJlc3VsdC1jb250YWluZXJcbntcbi8vICBib3JkZXI6IDFweCBzb2xpZCAkZGFya0dyZXk7XG5ib3gtc2hhZG93OiAtMTFweCAxM3B4IDIwcHggLTE0cHggcmdiYSgwLDAsMCwwLjc1KTtcblxuICBtYXJnaW46IDAgYXV0bztcbiAgei1pbmRleDogOTk5O1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuIC5zZWFyY2gtcmVzdWx0XG4gIHtcbiAgIGJhY2tncm91bmQtY29sb3I6ICRvZmZXaGl0ZTtcbiAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZGFya0dyZXk7XG4gICBwYWRkaW5nOiAyOXB4IDgwcHg7XG5cbiAgICY6bGFzdC1vZi10eXBlXG4gICB7XG4gICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICB9XG5cbiAgICY6aG92ZXJcbiAgIHtcbiAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgfVxuICB9XG59XG4uc2VhcmNoLXJlc3VsdC1hY3RpdmVcbntcbiAgYmFja2dyb3VuZC1jb2xvcjogJGRhcmtHcmV5ICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAkb2ZmV2hpdGU7XG59XG5oM1xue1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDE1cHg7XG59XG5cblxuLmhpZ2hsaWdodFxue1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGdyZWVuLDUlKTtcbiAgZm9udC1zaXplOiAxLjByZW07XG59XG4uc2VhcmNoLXJlc3VsdFxue1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cbiIsIlxuJGNhcmRCYWNrZ3JvdW5kOiAkb2ZmV2hpdGU7XG4kYWRkcmVzc0NvbnRhaW5lckJhY2tncm91bmQ6IGxpZ2h0ZW4oJGVhcnRoQmVpZ2UsMyUpO1xuJGFkZHJlc3NUZXh0Q29sb3I6ICRkYXJrR3JleTtcblxuLmFkcmVzcy1jb250YWluZXJcbntcbiAgYmFja2dyb3VuZC1jb2xvcjogJGFkZHJlc3NDb250YWluZXJCYWNrZ3JvdW5kO1xuICAvL2NvbG9yOiAkYWRkcmVzc1RleHRDb2xvcjtcbn1cbi5jYXJkLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjYXJkQmFja2dyb3VuZDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogJGFkZHJlc3NUZXh0Q29sb3I7XG4gIGJveC1zaGFkb3c6ICRib3hTaGFkb3c7XG4gIC5mYWNlLWNvbnRhaW5lciB7XG4gICAgIGJveC1zaGFkb3c6ICRib3hTaGFkb3c7XG4gIH1cbn1cbi5hZHJlc3MtY29udGFpbmVyIHtcbiAgLmd0ci1yb3cge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRhZGRyZXNzQ29udGFpbmVyQmFja2dyb3VuZDtcbiAgfVxufVxuJGZhY2VTaXplOiAxNDVweDtcbi5mYWNlLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMHB4O1xuICByaWdodDogMTBweDtcbiAgd2lkdGg6ICRmYWNlU2l6ZTtcbiAgaGVpZ2h0OiAkZmFjZVNpemU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5AaW5jbHVkZSByZXNwb25kLXRvKG5vdC1kZXNrdG9wKSB7XG4gIC5hZHJlc3MtdGV4dC1jb250YWluZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAxNjBweCAyMHB4IDMwcHggMzBweDtcbiAgfVxuICAuZmFjZS1jb250YWluZXIge1xuICAgIHRvcDogMTBweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgfVxuICAuYWxsLWluZm8tbGluayB7XG4gICAgbWFyZ2luOiAyMHB4IDEwcHggMCAwO1xuICB9XG59XG5AaW5jbHVkZSByZXNwb25kLXRvKGRlc2t0b3ApIHtcbiAgLmFkcmVzcy10ZXh0LWNvbnRhaW5lciB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIHBhZGRpbmc6IDE2MHB4IDAgMzBweCAxMCU7XG4gIH1cbiAgLmZhY2UtY29udGFpbmVyIHtcbiAgICB0b3A6IDEwcHg7XG4gICAgcmlnaHQ6IDEwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB9XG4gIC5hbGwtaW5mby1saW5rIHtcbiAgICBtYXJnaW46IDIwcHggMTIlIDAgMDtcbiAgfVxuXG59XG4uaWNvbiB7XG4gIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICBmb250LXNpemU6IDE4cHg7XG4gIG1hcmdpbjogMzBweCAxNXB4IDAgMDtcbiAgY29sb3I6IGRhcmtlbihncmV5LDEwJSk7XG59XG4ucGxhY2Vob2xkZXItaWNvbiB7XG4gIGNvbG9yOiAkY2FyZEJhY2tncm91bmQ7XG59XG4uYWxsLWluZm8tbGluayB7XG4gIHBhZGRpbmc6IDE1cHggNXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICRkYXJrR3JleTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogJG9mZldoaXRlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAmOmhvdmVyXG4gIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRkYXJrR3JleSwyMCUpO1xuICB9XG59XG4vKiBBUlJPVy1IT0xFISAqL1xuLmFycm93LWhvbGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRhZGRyZXNzQ29udGFpbmVyQmFja2dyb3VuZDtcbn1cbi5hcnJvdy1ob2xlOmJlZm9yZSB7XG4gICAgcmlnaHQ6IDUwJTtcbiAgICBib3JkZXItcmlnaHQ6IDIwcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIH1cbiAgLmFycm93LWhvbGU6YWZ0ZXIge1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgYm9yZGVyLWxlZnQ6IDIwcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIH1cblxuICAuYXJyb3ctaG9sZTphZnRlciwgLmFycm93LWhvbGU6YmVmb3JlIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDIwcHggc29saWQgJGFkZHJlc3NDb250YWluZXJCYWNrZ3JvdW5kO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDEwMCU7XG4gICAgICB3aWR0aDogNTAlO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB9XG4iLCIucG9wLXVwLWNvbnRhaW5lclxue1xuXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogOTk5OTtcbiAgYmFja2dyb3VuZC1jb2xvcjokb3ZlcmxheTtcbiAgZGlzcGxheTogbm9uZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UtaW4tb3V0O1xuICBvcGFjaXR5OiAwO1xuXG5cblxuXG5cbiAgLnBvcC11cC1mYWNlLWNvbnRhaW5lclxuICB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cblxuXG4gIH1cbiAgLnBvcC11cC1jb250YWluZXItaW5uZXJcbiAge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkb2ZmV2hpdGU7XG4gICAgYW5pbWF0aW9uOiBzay1zY2FsZW91dCAuNHMgIGVhc2UtaW4tb3V0O1xuXG4gIEBrZXlmcmFtZXMgc2stc2NhbGVvdXQge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XG4gICAgb3BhY2l0eTogMDtcblxuICB9IDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wKTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIH1cblxuICB9XG5cbiAgLmNsb3NlLXBvcC11cFxuICB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHJlZDtcbiAgICBjb2xvcjogJG9mZldoaXRlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICAmOmhvdmVyXG4gICAge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRyZWQsMTAlKTtcbiAgICB9XG4gIH1cblxuXG5AaW5jbHVkZSByZXNwb25kLXRvKHBob25lLWRldmljZSkge1xuICAucG9wLXVwLWZhY2UtY29udGFpbmVyXG4gIHtcbiAgICBoZWlnaHQ6IDEzMHB4O1xuICAgIHdpZHRoOiAxMzBweDtcbiAgICB0b3A6IC03MHB4O1xuICB9XG5cbiAgLnBvcC11cC1jb250YWluZXItaW5uZXJcbiAge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBtYXJnaW46IDMwcHggYXV0byAwIGF1dG87IC8vXG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIHBhZGRpbmc6IDU1cHggMjBweCAxMHB4IDIwcHg7XG4gIH1cblxuICAuY2xvc2UtcG9wLXVwXG4gIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgd2lkdGg6IDkwcHg7XG4gICAgcGFkZGluZzogMTVweCAxNXB4O1xuICB9XG5cblxuXG5cbn1cbkBpbmNsdWRlIHJlc3BvbmQtdG8obGFyZ2UtZGV2aWNlKSB7XG4gIC5wb3AtdXAtZmFjZS1jb250YWluZXJcbiAge1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIHRvcDogLTEwMHB4O1xuICB9XG4gIC5wb3AtdXAtY29udGFpbmVyLWlubmVyXG4gIHtcbiAgICBtYXJnaW46IDEyMHB4IGF1dG8gMCBhdXRvOyAvL1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICBwYWRkaW5nOiAxMDBweCA0MHB4IDgwcHggNDBweDtcbiAgfVxuICAuY2xvc2UtcG9wLXVwXG4gIHtcbiAgICB3aWR0aDogMTQwcHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxufVxuXG5cblxuXG5cbiAgLmhpZ2hsaWdodFxuICB7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgfVxuXG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
