/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

[class*="col"] {
  float: left; }

/*=================================================
 Mobile-small  1px - 320px
 =================================================*/
@media (min-width: 1px) and (max-width: 450px) {
  .col-12-ms {
    width: 100%; }
  .col-11-ms {
    width: 91.66667%; }
  .col-10-ms {
    width: 83.33333%; }
  .col-9-ms {
    width: 75%; }
  .col-8-ms {
    width: 66.66667%; }
  .col-7-ms {
    width: 58.33333%; }
  .col-6-ms {
    width: 50%; }
  .col-5-ms {
    width: 41.66667%; }
  .col-4-ms {
    width: 33.33333%; }
  .col-3-ms {
    width: 25%; }
  .col-2-ms {
    width: 16.66667%; }
  .col-1-ms {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 3px 3px 0 3px; }
  .gtr-row:last-child {
    margin: 0 3px 3px 3px; }
  .gtr-row {
    margin: 0 3px; }
  .gtr {
    padding: 0;
    margin: 0; }
    .gtr > div {
      margin: 3px;
      min-height: 200px; } }

/*=================================================
 Mobile-large  321px - 767px
 =================================================*/
@media (min-width: 451px) and (max-width: 767px) {
  .col-12-ml {
    width: 100%; }
  .col-11-ml {
    width: 91.66667%; }
  .col-10-ml {
    width: 83.33333%; }
  .col-9-ml {
    width: 75%; }
  .col-8-ml {
    width: 66.66667%; }
  .col-7-ml {
    width: 58.33333%; }
  .col-6-ml {
    width: 50%; }
  .col-5-ml {
    width: 41.66667%; }
  .col-4-ml {
    width: 33.33333%; }
  .col-3-ml {
    width: 25%; }
  .col-2-ml {
    width: 16.66667%; }
  .col-1-ml {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 6px 6px 0 6px; }
  .gtr-row:last-child {
    margin: 0 6px 6px 6px; }
  .gtr-row {
    margin: 0 6px; }
  .gtr {
    margin: 0; }
    .gtr > div {
      margin: 6px;
      min-height: 300px; } }

/*=================================================
 TABLET  768px - 1024px
 =================================================*/
@media (min-width: 768px) and (max-width: 1024px) {
  .col-12-tab {
    width: 100%; }
  .col-11-tab {
    width: 91.66667%; }
  .col-10-tab {
    width: 83.33333%; }
  .col-9-tab {
    width: 75%; }
  .col-8-tab {
    width: 66.66667%; }
  .col-7-tab {
    width: 58.33333%; }
  .col-6-tab {
    width: 50%; }
  .col-5-tab {
    width: 41.66667%; }
  .col-4-tab {
    width: 33.33333%; }
  .col-3-tab {
    width: 25%; }
  .col-2-tab {
    width: 16.66667%; }
  .col-1-tab {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 4px 4px 0 4px; }
  .gtr-row:last-child {
    margin: 0 4px 4px 4px; }
  .gtr-row {
    margin: 0 4px; }
  .gtr {
    padding: 0;
    margin: 0; }
    .gtr > div {
      margin: 4px;
      min-height: 230px; } }

/*=================================================
 DESKTOP > 1024px
 =================================================*/
@media (min-width: 1025px) {
  .col-12-desk {
    width: 100%; }
  .col-11-desk {
    width: 91.66667%; }
  .col-10-desk {
    width: 83.33333%; }
  .col-9-desk {
    width: 75%; }
  .col-8-desk {
    width: 66.66667%; }
  .col-7-desk {
    width: 58.33333%; }
  .col-6-desk {
    width: 50%; }
  .col-5-desk {
    width: 41.66667%; }
  .col-4-desk {
    width: 33.33333%; }
  .col-3-desk {
    width: 25%; }
  .col-2-desk {
    width: 16.66667%; }
  .col-1-desk {
    width: 8.33333%; }
  .gtr-row:first-child {
    margin: 6px 6px 0 6px; }
  .gtr-row:last-child {
    margin: 0 6px 6px 6px; }
  .gtr-row {
    margin: 0 6px; }
  .gtr {
    padding: 0;
    margin: 0; }
    .gtr > div {
      margin: 6px;
      min-height: 260px; } }

.row {
  width: 100%; }

.row:after {
  clear: both; }

.gtr-row:before,
.gtr-row:after {
  content: " ";
  /* 1 */
  display: block;
  /* 2 */ }

.gtr-row:after {
  clear: both; }

.gtr-row {
  *zoom: 1; }

.flex-center, .background-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.clear {
  clear: both; }

.center {
  margin: 0 auto;
  text-align: center; }

.hgt-200 {
  height: 200px; }

.red-bg {
  background-color: #D24D57; }

.blue-bg {
  background-color: #4183D7; }

.green-bg {
  background-color: #16A085; }

.purple-bg {
  background-color: #663399; }

.important-text {
  font-size: 1.2rem;
  text-decoration: underline; }

.inline-block {
  display: inline-block; }

a {
  text-decoration: none;
  color: inherit;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease; }
  a:hover {
    color: #16A085; }

body {
  color: #424242;
  font-family: 'Playfair Display', serif;
  position: relative; }
  body * {
    outline: none; }

.overlay {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.6);
  height: 100%;
  width: 100%;
  z-index: 100;
  display: none; }

h2 {
  padding: 30px 0; }

.row, .gtr-row {
  color: white;
  font-size: 13px; }

article {
  margin: 0 auto;
  max-width: 680px; }

.underline {
  text-decoration: underline; }

.background-container {
  width: 100%;
  background: url(../images/bear.jpg) center center no-repeat fixed;
  background-size: cover; }

.search-container {
  margin: 0 auto;
  background-color: rgba(255, 255, 255, 0.7);
  position: relative;
  z-index: 200; }
  .search-container input {
    display: block;
    height: 40px; }
  @media (min-width: 1px) and (max-width: 767px) {
    .search-container h1 {
      font-size: 24px;
      padding: 10px;
      margin: 10px 0 0 0; }
    .search-container .search-icon {
      font-size: 20px; } }
  @media (min-width: 768px) {
    .search-container h1 {
      font-size: 40px;
      padding: 10px;
      margin: 10px 0 0 0; }
    .search-container .search-icon {
      font-size: 34px; } }

@media (min-width: 1px) and (max-width: 767px) {
  .background-container {
    height: 400px; }
  .search-container {
    width: 98%;
    max-width: 560px; }
    .search-container input {
      width: 90%;
      margin: 0 auto; }
    .search-container h3 {
      text-align: center; } }

@media (min-width: 768px) {
  .background-container {
    height: 550px; }
  .search-container {
    width: 50%;
    max-width: 560px;
    padding: 0 60px; }
    .search-container input {
      width: 100%; } }

.search-result-container {
  box-shadow: -11px 13px 20px -14px rgba(0, 0, 0, 0.75);
  margin: 0 auto;
  z-index: 999;
  max-width: 100%;
  left: 0;
  right: 0;
  background-color: white;
  position: absolute; }
  .search-result-container .search-result {
    background-color: #fcfcf4;
    border-bottom: 1px solid #2f2f2f;
    padding: 29px 80px; }
    .search-result-container .search-result:last-of-type {
      border-bottom: none; }
    .search-result-container .search-result:hover {
      cursor: pointer; }

.search-result-active {
  background-color: #2f2f2f !important;
  color: #fcfcf4; }

h3 {
  padding: 0;
  margin: 15px; }

.highlight {
  color: white;
  background-color: #19b698;
  font-size: 1.0rem; }

.search-result {
  text-transform: capitalize; }

.adress-container {
  background-color: #eae7e3; }

.girl .face-container {
  box-shadow: -11px 13px 20px -14px rgba(0, 0, 0, 0.75); }

.boy .face-container {
  box-shadow: -11px 13px 20px -14px rgba(0, 0, 0, 0.75); }

.boy,
.girl {
  background-color: #fcfcf4;
  position: relative;
  color: #2f2f2f;
  box-shadow: -11px 13px 20px -14px rgba(0, 0, 0, 0.75); }

.adress-container .gtr-row {
  background-color: #eae7e3; }

.face-container {
  background-size: cover;
  background-position: center center;
  position: absolute;
  top: 10px;
  right: 10px;
  width: 145px;
  height: 145px;
  border-radius: 50%;
  background-color: white; }

@media (min-width: 1px) and (max-width: 1024px) {
  .adress-text-container {
    font-size: 14px;
    width: auto;
    margin: 0 auto;
    padding: 160px 20px 30px 30px; }
  .face-container {
    top: 10px;
    right: 0;
    left: 0;
    margin: 0 auto;
    border-radius: 50%; }
  .all-info-link {
    margin: 20px 10px 0 0; } }

@media (min-width: 1025px) {
  .adress-text-container {
    font-size: 16px;
    padding: 160px 0 30px 10%; }
  .face-container {
    top: 10px;
    right: 10px;
    border-radius: 50%; }
  .all-info-link {
    margin: 20px 12% 0 0; } }

.icon {
  line-height: 25px;
  font-size: 18px;
  margin: 30px 15px 0 0;
  color: #676767; }

.placeholder-icon {
  color: #fcfcf4; }

.all-info-link {
  padding: 15px 5px;
  cursor: pointer;
  background-color: #2f2f2f;
  text-align: center;
  color: #fcfcf4;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease; }
  .all-info-link:hover {
    background-color: #626262; }

/* ARROW-HOLE! */
.arrow-hole {
  position: relative;
  bottom: 0;
  width: 100%;
  height: 20px;
  background-color: #eae7e3; }

.arrow-hole:before {
  right: 50%;
  border-right: 20px solid transparent; }

.arrow-hole:after {
  left: 50%;
  border-left: 20px solid transparent; }

.arrow-hole:after, .arrow-hole:before {
  border-bottom: 20px solid #eae7e3;
  content: '';
  position: absolute;
  bottom: 100%;
  width: 50%;
  box-sizing: border-box; }

.pop-up-container {
  position: fixed;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background-color: rgba(0, 0, 0, 0.6);
  display: none;
  -webkit-transition: opacity 0.35s ease-in-out;
  transition: opacity 0.35s ease-in-out;
  opacity: 0; }
  .pop-up-container .pop-up-face-container {
    margin: 0 auto;
    left: 0;
    right: 0;
    border-radius: 50%;
    position: absolute;
    background-size: cover; }
  .pop-up-container .pop-up-container-inner {
    position: relative;
    background-color: #fcfcf4; }
  .pop-up-container .close-pop-up {
    background-color: #D24D57;
    color: #fcfcf4;
    cursor: pointer;
    text-align: center;
    -webkit-transition: all 0.3s ease;
    transition: all 0.3s ease; }
    .pop-up-container .close-pop-up:hover {
      background-color: #bc303a; }
  @media (min-width: 1px) and (max-width: 767px) {
    .pop-up-container .pop-up-face-container {
      height: 130px;
      width: 130px;
      top: -70px; }
    .pop-up-container .pop-up-container-inner {
      font-size: 14px;
      margin: 30px auto 0 auto;
      width: 80%;
      max-width: 500px;
      padding: 55px 20px 10px 20px; }
    .pop-up-container .close-pop-up {
      font-size: 14px;
      width: 90px;
      padding: 15px 15px; } }
  @media (min-width: 768px) {
    .pop-up-container .pop-up-face-container {
      height: 200px;
      width: 200px;
      top: -100px; }
    .pop-up-container .pop-up-container-inner {
      margin: 120px auto 0 auto;
      width: 90%;
      max-width: 500px;
      padding: 100px 40px 80px 40px; }
    .pop-up-container .close-pop-up {
      width: 140px;
      padding: 20px; } }
  .pop-up-container .highlight {
    color: inherit;
    background-color: inherit; }

/*# sourceMappingURL=data:application/json;base64, */
